[{"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\reportWebVitals.js":"1","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\index.js":"2","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\App.js":"3","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\Main\\index.js":"4","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\Main\\styles.js":"5","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\routes.js":"6","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Services\\Api.js":"7","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ProductItemList\\index.js":"8","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ProductItemList\\styles.js":"9","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CategoriesList\\index.js":"10","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CategoriesList\\styles.js":"11","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\Navbar\\index.js":"12","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\Navbar\\styles.js":"13","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\ProductSearch\\index.js":"14","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\ProductSearch\\styles.js":"15","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ModalProduct\\index.js":"16","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ModalProduct\\styles.js":"17","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Contexts\\ApplicationContext.js":"18","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ShoppingBagButton\\index.js":"19","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\FinishOrder\\index.js":"20","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ProductCartList\\index.js":"21","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ProductCartList\\styles.js":"22","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ClientForm\\index.js":"23","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\OrderSubTotal\\index.js":"24","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ProductImage\\index.js":"25","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ProductImage\\styles.js":"26","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ProductCounter\\index.js":"27","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\OrderSubTotal\\styles.js":"28","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\FinishOrder\\styles.js":"29","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\DeliveryFormData\\index.js":"30","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\DeliveryFormData\\styles.js":"31","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CompanyLocation\\index.js":"32","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CompanyLocation\\styles.js":"33","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\AppHeader\\index.js":"34","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\AppHeader\\styles.js":"35","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\OrderSummary\\index.js":"36","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\UserButton\\index.js":"37","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\LoginModal\\index.js":"38","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\LoginForm\\index.js":"39","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\LoginModal\\styles.js":"40","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\LoginForm\\styles.js":"41","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CompanyLogo\\index.js":"42","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CompanyLogo\\styles.js":"43","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\Company\\index.js":"44","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CompanyForm\\index.js":"45","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CompanyForm\\styles.js":"46","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ContextLoader\\index.js":"47","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Utils\\States.js":"48","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\Notification\\index.js":"49","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\Orders\\index.js":"50","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\OrderList\\index.js":"51","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\Products\\index.js":"52","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ProductList\\index.js":"53","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ProductList\\styles.js":"54","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\GlobalSearchInput\\index.js":"55","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Utils\\Toast.js":"56","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Styles\\GlobalStyle.js":"57","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\FileUpload\\index.js":"58","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\FileUpload\\styles.js":"59","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\Product\\index.js":"60","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ProductForm\\index.js":"61","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ProductForm\\styles.js":"62","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CategoryModal\\index.js":"63","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CategoryForm\\index.js":"64","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CategoryForm\\styles.js":"65","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\OrderDetail\\index.js":"66","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\OrderDetailsForm\\index.js":"67","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\OrderDetailsForm\\styles.js":"68","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\OrderItens\\index.js":"69","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\OrderItens\\styles.js":"70","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\User\\index.js":"71","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\UserForm\\index.js":"72","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\UserForm\\styles.js":"73","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\AddressList\\index.js":"74","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CompanyList\\index.js":"75","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CompanyList\\styles.js":"76","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\Login\\index.js":"77","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\Dashboard\\index.js":"78","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\SearchCompanyDomain\\index.js":"79","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CompanySearchCard\\index.js":"80","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CompanySearchCard\\styles.js":"81","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\AdminMenu\\index.js":"82","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\AdminMenu\\styles.js":"83","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CardDashboard\\index.js":"84","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CardDashboard\\styles.js":"85","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\Dashboard\\syles.js":"86","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\OrderStatusCard\\index.js":"87","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\DashboardCardList\\index.js":"88","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\DashboardCardList\\styles.js":"89","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\DashboardChart\\index.js":"90","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\BackgroundImage\\index.js":"91","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\BackgroundImage\\styles.js":"92","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\Grid\\index.js":"93","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\Grid\\styles.js":"94","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\DigiCard\\index.js":"95","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\DigiCard\\styles.js":"96","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\FinishedOrder\\index.js":"97","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\FinishedOrder\\styles.js":"98"},{"size":362,"mtime":1610295655614,"results":"99","hashOfConfig":"100"},{"size":478,"mtime":1610312675700,"results":"101","hashOfConfig":"100"},{"size":586,"mtime":1617929055498,"results":"102","hashOfConfig":"100"},{"size":503,"mtime":1617929056311,"results":"103","hashOfConfig":"100"},{"size":927,"mtime":1611099245748,"results":"104","hashOfConfig":"100"},{"size":4253,"mtime":1617929056372,"results":"105","hashOfConfig":"100"},{"size":395,"mtime":1617929056353,"results":"106","hashOfConfig":"100"},{"size":2180,"mtime":1617929056067,"results":"107","hashOfConfig":"100"},{"size":1974,"mtime":1611372242886,"results":"108","hashOfConfig":"100"},{"size":1171,"mtime":1617929055669,"results":"109","hashOfConfig":"100"},{"size":1434,"mtime":1617553032233,"results":"110","hashOfConfig":"100"},{"size":1171,"mtime":1617929055918,"results":"111","hashOfConfig":"100"},{"size":582,"mtime":1617929055923,"results":"112","hashOfConfig":"100"},{"size":280,"mtime":1613436476063,"results":"113","hashOfConfig":"100"},{"size":927,"mtime":1611196572810,"results":"114","hashOfConfig":"100"},{"size":2840,"mtime":1617929055918,"results":"115","hashOfConfig":"100"},{"size":1294,"mtime":1611371972113,"results":"116","hashOfConfig":"100"},{"size":5139,"mtime":1617929056063,"results":"117","hashOfConfig":"100"},{"size":1101,"mtime":1616964335851,"results":"118","hashOfConfig":"100"},{"size":5537,"mtime":1617929056307,"results":"119","hashOfConfig":"100"},{"size":3014,"mtime":1617929055971,"results":"120","hashOfConfig":"100"},{"size":680,"mtime":1613436167941,"results":"121","hashOfConfig":"100"},{"size":7246,"mtime":1617929055683,"results":"122","hashOfConfig":"100"},{"size":1977,"mtime":1617929055967,"results":"123","hashOfConfig":"100"},{"size":408,"mtime":1617929055979,"results":"124","hashOfConfig":"100"},{"size":263,"mtime":1612026234983,"results":"125","hashOfConfig":"100"},{"size":998,"mtime":1613436766501,"results":"126","hashOfConfig":"100"},{"size":481,"mtime":1612998724392,"results":"127","hashOfConfig":"100"},{"size":478,"mtime":1617929056303,"results":"128","hashOfConfig":"100"},{"size":13580,"mtime":1617929055856,"results":"129","hashOfConfig":"100"},{"size":471,"mtime":1617929055856,"results":"130","hashOfConfig":"100"},{"size":2116,"mtime":1617929055730,"results":"131","hashOfConfig":"100"},{"size":572,"mtime":1612737328558,"results":"132","hashOfConfig":"100"},{"size":145,"mtime":1613095882855,"results":"133","hashOfConfig":"100"},{"size":196,"mtime":1613097188546,"results":"134","hashOfConfig":"100"},{"size":720,"mtime":1617929055967,"results":"135","hashOfConfig":"100"},{"size":1478,"mtime":1617929056205,"results":"136","hashOfConfig":"100"},{"size":777,"mtime":1617929056005,"results":"137","hashOfConfig":"100"},{"size":2775,"mtime":1617929055866,"results":"138","hashOfConfig":"100"},{"size":1294,"mtime":1613348773342,"results":"139","hashOfConfig":"100"},{"size":1294,"mtime":1613347922603,"results":"140","hashOfConfig":"100"},{"size":886,"mtime":1617929055732,"results":"141","hashOfConfig":"100"},{"size":360,"mtime":1617929055774,"results":"142","hashOfConfig":"100"},{"size":241,"mtime":1617929056063,"results":"143","hashOfConfig":"100"},{"size":10643,"mtime":1617929055770,"results":"144","hashOfConfig":"100"},{"size":478,"mtime":1617929055707,"results":"145","hashOfConfig":"100"},{"size":596,"mtime":1617929055774,"results":"146","hashOfConfig":"100"},{"size":1215,"mtime":1613490628685,"results":"147","hashOfConfig":"100"},{"size":898,"mtime":1613505920386,"results":"148","hashOfConfig":"100"},{"size":238,"mtime":1617929056303,"results":"149","hashOfConfig":"100"},{"size":3785,"mtime":1617929055959,"results":"150","hashOfConfig":"100"},{"size":206,"mtime":1617375700142,"results":"151","hashOfConfig":"100"},{"size":3807,"mtime":1617929056009,"results":"152","hashOfConfig":"100"},{"size":1856,"mtime":1617929056009,"results":"153","hashOfConfig":"100"},{"size":937,"mtime":1617929055862,"results":"154","hashOfConfig":"100"},{"size":414,"mtime":1613882579324,"results":"155","hashOfConfig":"100"},{"size":569,"mtime":1617929056353,"results":"156","hashOfConfig":"100"},{"size":2451,"mtime":1617929055860,"results":"157","hashOfConfig":"100"},{"size":1376,"mtime":1617929055860,"results":"158","hashOfConfig":"100"},{"size":231,"mtime":1617929056307,"results":"159","hashOfConfig":"100"},{"size":10296,"mtime":1617929055975,"results":"160","hashOfConfig":"100"},{"size":620,"mtime":1617929055975,"results":"161","hashOfConfig":"100"},{"size":643,"mtime":1617929055679,"results":"162","hashOfConfig":"100"},{"size":4506,"mtime":1617929055680,"results":"163","hashOfConfig":"100"},{"size":488,"mtime":1617929055675,"results":"164","hashOfConfig":"100"},{"size":254,"mtime":1617929056299,"results":"165","hashOfConfig":"100"},{"size":6862,"mtime":1617929055922,"results":"166","hashOfConfig":"100"},{"size":620,"mtime":1617929056009,"results":"167","hashOfConfig":"100"},{"size":1834,"mtime":1617929055955,"results":"168","hashOfConfig":"100"},{"size":680,"mtime":1617929055955,"results":"169","hashOfConfig":"100"},{"size":233,"mtime":1617929056312,"results":"170","hashOfConfig":"100"},{"size":12602,"mtime":1617929056059,"results":"171","hashOfConfig":"100"},{"size":620,"mtime":1617929056059,"results":"172","hashOfConfig":"100"},{"size":1433,"mtime":1617929055606,"results":"173","hashOfConfig":"100"},{"size":1948,"mtime":1617929055711,"results":"174","hashOfConfig":"100"},{"size":1487,"mtime":1616903750985,"results":"175","hashOfConfig":"100"},{"size":1056,"mtime":1617929056237,"results":"176","hashOfConfig":"100"},{"size":355,"mtime":1617929056201,"results":"177","hashOfConfig":"100"},{"size":388,"mtime":1617929056307,"results":"178","hashOfConfig":"100"},{"size":2278,"mtime":1617929055770,"results":"179","hashOfConfig":"100"},{"size":725,"mtime":1617929055774,"results":"180","hashOfConfig":"100"},{"size":3680,"mtime":1617929055510,"results":"181","hashOfConfig":"100"},{"size":725,"mtime":1617929055514,"results":"182","hashOfConfig":"100"},{"size":957,"mtime":1617929055610,"results":"183","hashOfConfig":"100"},{"size":954,"mtime":1617929055610,"results":"184","hashOfConfig":"100"},{"size":408,"mtime":1617376356906,"results":"185","hashOfConfig":"100"},{"size":1305,"mtime":1617421484869,"results":"186","hashOfConfig":"100"},{"size":1898,"mtime":1617929055818,"results":"187","hashOfConfig":"100"},{"size":619,"mtime":1617929055818,"results":"188","hashOfConfig":"100"},{"size":1776,"mtime":1617929055818,"results":"189","hashOfConfig":"100"},{"size":452,"mtime":1617929055518,"results":"190","hashOfConfig":"100"},{"size":741,"mtime":1617929055522,"results":"191","hashOfConfig":"100"},{"size":277,"mtime":1617929055862,"results":"192","hashOfConfig":"100"},{"size":1598,"mtime":1617929055862,"results":"193","hashOfConfig":"100"},{"size":1159,"mtime":1617929055856,"results":"194","hashOfConfig":"100"},{"size":1674,"mtime":1617929055856,"results":"195","hashOfConfig":"100"},{"size":730,"mtime":1617929056201,"results":"196","hashOfConfig":"100"},{"size":429,"mtime":1617929056201,"results":"197","hashOfConfig":"100"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},"cfobbg",{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"209"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"200"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"200"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"232"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"200"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"200"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"200"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"254","usedDeprecatedRules":"200"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"259","messages":"260","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"261","messages":"262","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"263","messages":"264","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"265","messages":"266","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"267","usedDeprecatedRules":"200"},{"filePath":"268","messages":"269","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"270","messages":"271","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"200"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"277"},{"filePath":"278","messages":"279","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"277"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"284","usedDeprecatedRules":"200"},{"filePath":"285","messages":"286","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"287","messages":"288","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"289","usedDeprecatedRules":"200"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"300","messages":"301","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"302","usedDeprecatedRules":"200"},{"filePath":"303","messages":"304","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"307","usedDeprecatedRules":"200"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"310","messages":"311","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"312"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"315","messages":"316","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"317","usedDeprecatedRules":"200"},{"filePath":"318","messages":"319","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"321","messages":"322","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"200"},{"filePath":"324","messages":"325","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"200"},{"filePath":"329","messages":"330","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"331","messages":"332","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"333","messages":"334","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"335","usedDeprecatedRules":"200"},{"filePath":"336","messages":"337","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"338","messages":"339","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"200"},{"filePath":"343","messages":"344","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"347","usedDeprecatedRules":"200"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"350","usedDeprecatedRules":"200"},{"filePath":"351","messages":"352","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"353","messages":"354","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"355","messages":"356","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"357","usedDeprecatedRules":"200"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"360","messages":"361","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"362","usedDeprecatedRules":"200"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"369","usedDeprecatedRules":"200"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"372","messages":"373","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"374","usedDeprecatedRules":"200"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"377","usedDeprecatedRules":"200"},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"380"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"393","usedDeprecatedRules":"200"},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"398","messages":"399","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"400","usedDeprecatedRules":"200"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"320"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"320"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"408","usedDeprecatedRules":"200"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"411","usedDeprecatedRules":"200"},{"filePath":"412","messages":"413","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"414","usedDeprecatedRules":"200"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"200"},"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\reportWebVitals.js",[],["431","432"],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\index.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\App.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\Main\\index.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\Main\\styles.js",[],["433","434"],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\routes.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Services\\Api.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ProductItemList\\index.js",["435","436","437","438","439","440","441","442","443"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Spinner } from \"react-rainbow-components\";\r\n\r\nimport empty from \"../../Assets/empty.svg\";\r\nimport ModalProduct from \"../../Components/ModalProduct\";\r\nimport { ApplicationContext } from \"../../Contexts/ApplicationContext\";\r\nimport { Api, baseURL } from \"../../Services/Api\";\r\nimport BackgroundImage from \"../BackgroundImage\";\r\nimport DigiCard from \"../DigiCard\";\r\nimport Grid from \"../Grid\";\r\nimport { Card, Col, Container, Description, Image, Price, Row, Titile } from \"./styles\";\r\n\r\nexport default function ProductItemList(props) {\r\n  const [loading, setLoading] = useState(true);\r\n  const [productIdForModal, setProductIdForModal] = useState();\r\n  const [productList, setProductList] = useState({ content: [] });\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n\r\n  const { globalSearch, setShowGlobalSearch } = useContext(ApplicationContext);\r\n  function openModal(productId) {\r\n    setProductIdForModal(productId);\r\n    setModalIsOpen(!modalIsOpen);\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadProducts();\r\n    setShowGlobalSearch(true);\r\n  }, [globalSearch]);\r\n\r\n  async function loadProducts() {\r\n    await Api.get(\r\n      `${props.company}/products/${props.category}&name=${globalSearch}`\r\n    ).then((result) => {\r\n      setProductList(result.data);\r\n      setLoading(false);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {productList.content.length === 0 && !loading ? (\r\n        <BackgroundImage asset={empty} text=\"Nada encontrado :(\" />\r\n      ) : (\r\n        <Grid>\r\n          <Spinner size=\"large\" variant=\"brand\" isVisible={loading} />\r\n          <ModalProduct\r\n            isOpen={modalIsOpen}\r\n            id={productIdForModal}\r\n            company={props.company}\r\n          />\r\n          {productList.content.map((i) => (\r\n            <DigiCard\r\n              onClick={() => openModal(i.id)}\r\n              key={i.id}\r\n              title={i.name}\r\n              description={i.description}\r\n              price={i.salePrice}\r\n              imageUrl={`${baseURL}/${props.company}/attachments/${i.attachment}`}\r\n            />\r\n          ))}\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ProductItemList\\styles.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CategoriesList\\index.js",["444"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { ApplicationContext } from \"../../Contexts/ApplicationContext\";\r\nimport { Api, baseURL } from \"../../Services/Api\";\r\nimport DigiCard from \"../DigiCard\";\r\nimport Grid from \"../Grid\";\r\n\r\nexport default function CategoriesList() {\r\n  const { company } = useContext(ApplicationContext);\r\n  const [categoriesList, setCategoriesList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    loadCaregories();\r\n  }, [company]);\r\n\r\n  async function loadCaregories() {\r\n    if (company !== \"\") {\r\n      await Api.get(`${company}/product/categories/`).then((result) => {\r\n        setCategoriesList(result.data);\r\n      });\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Grid>\r\n      {categoriesList.map((i) => (\r\n        <Link\r\n          key={i.id}\r\n          to={`productsearch?category=${i.id}`}\r\n          style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n        >\r\n          <DigiCard\r\n            key={i.id}\r\n            title={i.name}\r\n            imageUrl={`${baseURL}/${i.company}/attachments/${i.attachment}`}\r\n          />\r\n        </Link>\r\n      ))}\r\n    </Grid>\r\n  );\r\n}\r\n","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CategoriesList\\styles.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\Navbar\\index.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\Navbar\\styles.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\ProductSearch\\index.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\ProductSearch\\styles.js",[],["445","446"],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ModalProduct\\index.js",["447","448"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { FaChevronLeft, FaChevronRight } from \"react-icons/fa\";\r\nimport { Button, ButtonIcon, Input, Modal, Spinner } from \"react-rainbow-components\";\r\n\r\nimport { ApplicationContext } from \"../../Contexts/ApplicationContext\";\r\nimport { Api, baseURL } from \"../../Services/Api\";\r\nimport { Container, FooterContainer, Image, QuantityContainer, Row, Subtotal } from \"./styles\";\r\n\r\nfunction ModalProduct(props) {\r\n  const { addProductInCheckout } = useContext(ApplicationContext);\r\n  const [isOpen, setIsopen] = useState(true);\r\n  const [product, setProduct] = useState({});\r\n  const [quantity, setQuantity] = useState(1);\r\n\r\n  function handleOnClose() {\r\n    setIsopen(false);\r\n  }\r\n\r\n  useEffect(() => {\r\n    loadProducts(props.id);\r\n  }, [props.id]);\r\n\r\n  useEffect(() => {\r\n    setIsopen(!isOpen);\r\n  }, [props.isOpen]);\r\n\r\n  function changeQuantity(value) {\r\n    if (quantity + value > 0) {\r\n      setQuantity(quantity + value);\r\n    }\r\n  }\r\n\r\n  async function loadProducts(id) {\r\n    if (!(id === undefined)) {\r\n      await Api.get(`${props.company}/products/${id}`).then((result) => {\r\n        setProduct(result.data);\r\n      });\r\n    }\r\n  }\r\n\r\n  function saveInStorage() {\r\n    let newProduct = product;\r\n    product[\"quantity\"] = quantity;\r\n    addProductInCheckout(newProduct);\r\n    setIsopen(!isOpen);\r\n    setQuantity(1);\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      size=\"large\"\r\n      onRequestClose={handleOnClose}\r\n      title={product.name}\r\n      footer={\r\n        <FooterContainer>\r\n          <QuantityContainer style>\r\n            <ButtonIcon\r\n              variant=\"brand\"\r\n              icon={<FaChevronLeft />}\r\n              onClick={() => changeQuantity(-1)}\r\n            />\r\n            <Input value={quantity} />\r\n            <ButtonIcon\r\n              variant=\"brand\"\r\n              icon={<FaChevronRight />}\r\n              onClick={() => changeQuantity(1)}\r\n            />\r\n          </QuantityContainer>\r\n          <Subtotal>\r\n            <small>R$</small>\r\n            {(quantity * product.salePrice).toLocaleString(\"pt-br\", {\r\n              minimumFractionDigits: 2,\r\n            })}\r\n          </Subtotal>\r\n          <Button\r\n            label=\"Colocar no carrinho\"\r\n            variant=\"brand\"\r\n            onClick={() => saveInStorage()}\r\n          />\r\n        </FooterContainer>\r\n      }\r\n    >\r\n      <Container>\r\n        <Row>\r\n          <Image\r\n            src={\r\n              product.attachment === undefined ? (\r\n                <Spinner />\r\n              ) : (\r\n                `${baseURL}/${product.company}/attachments/${product.attachment}`\r\n              )\r\n            }\r\n          />\r\n        </Row>\r\n        <p>{product.description}</p>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default ModalProduct;\r\n","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ModalProduct\\styles.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Contexts\\ApplicationContext.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ShoppingBagButton\\index.js",["449"],"import React, { useContext, useEffect } from \"react\";\r\nimport { BadgeOverlay } from \"react-rainbow-components\";\r\nimport { FaShoppingCart } from \"react-icons/fa\";\r\nimport { ApplicationContext } from \"../../Contexts/ApplicationContext\";\r\n\r\nfunction ShoppingBagButton(props) {\r\n  const { updateCheckoutProducts, checkoutProducts, company } = useContext(\r\n    ApplicationContext\r\n  );\r\n\r\n  useEffect(() => {\r\n    updateCheckoutProducts(company);\r\n  }, [company]);\r\n\r\n  const badgeStyle = {\r\n    backgroundColor: \"#01B6F5\",\r\n    padding: \"10px\",\r\n    borderRadius: \"300px\"\r\n  }\r\n\r\n  return (\r\n    <BadgeOverlay\r\n      style={badgeStyle}\r\n      isHidden={checkoutProducts.products.length > 0 ? false : true}\r\n      variant=\"brand\"\r\n      position=\"bottom-right\"\r\n      className=\"rainbow-m-around_x-large\"\r\n      value={\r\n        checkoutProducts.producs !== null &&\r\n        checkoutProducts.products.length > 0\r\n          ? checkoutProducts.products.length\r\n          : 1\r\n      }\r\n    >\r\n      <FaShoppingCart color=\"#fff\" size={18} />\r\n    </BadgeOverlay>\r\n  );\r\n}\r\n\r\nexport default ShoppingBagButton;\r\n","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\FinishOrder\\index.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ProductCartList\\index.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ProductCartList\\styles.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ClientForm\\index.js",["450","451"],"import { useFormik } from \"formik\";\r\nimport PropTypes from \"prop-types\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { FaQuestion } from \"react-icons/fa\";\r\nimport { Avatar, Button, Card, Input, RenderIf } from \"react-rainbow-components\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { ApplicationContext } from \"../../Contexts/ApplicationContext\";\r\n\r\nconst ClientForm = ({\r\n  handleNextClick,\r\n  handleBackClick,\r\n  showFooterButtons,\r\n  card\r\n}) => {\r\n  const {\r\n    setClientCheckoutData,\r\n    clientCheckoutData,\r\n    updateClientDataStorage,\r\n  } = useContext(ApplicationContext);\r\n  const [disableNext, setDisableNext] = useState(false);\r\n  const [readOnlyFields, setReadOnlyFields] = useState(true);\r\n  const [cardMessage, setCardMessage] = useState(\"Seus dados estão corretos?\");\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    name: Yup.string().min(2, \"Tamanho inválido\").required(\"Campo obrigatório\"),\r\n    phone: Yup.string()\r\n      .min(2, \"Tamanho inválido\")\r\n      .required(\"Campo obrigatório\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name:\r\n        clientCheckoutData !== undefined && clientCheckoutData.name\r\n          ? clientCheckoutData.name\r\n          : \"\",\r\n      phone:\r\n        clientCheckoutData !== undefined && clientCheckoutData.phone\r\n          ? clientCheckoutData.phone\r\n          : \"\",\r\n    },\r\n    validationSchema,\r\n    validateOnChange: true,\r\n    validateOnBlur: false,\r\n    isInitialValid: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (\r\n      typeof clientCheckoutData.name !== \"undefined\" &&\r\n      typeof clientCheckoutData.phone !== \"undefined\"\r\n    ) {\r\n      setReadOnlyFields(true);\r\n      setCardMessage(\"Seus dados estão corretos?\");\r\n    } else {\r\n      setReadOnlyFields(false);\r\n      setCardMessage(\"Insira seus dados\");\r\n    }\r\n  }, []);\r\n\r\n  const saveInContext = () => {\r\n    let oldClientData = clientCheckoutData;\r\n    oldClientData.name = formik.values.name;\r\n    oldClientData.phone = formik.values.phone;\r\n    setClientCheckoutData(oldClientData);\r\n    handleNextClick();\r\n  };\r\n\r\n  var inputStyles = {\r\n    fontWeight: \"bold\",\r\n  };\r\n\r\n  const confirmData = () => {\r\n    setReadOnlyFields(true);\r\n    setDisableNext(false);\r\n  };\r\n\r\n  const editData = () => {\r\n    setReadOnlyFields(false);\r\n    setDisableNext(true);\r\n    inputStyles = {};\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {card ? (\r\n        <Card\r\n          icon={<Avatar icon={<FaQuestion />} />}\r\n          title={cardMessage}\r\n          style={{\r\n            width: \"90%\",\r\n            marginLeft: \"auto\",\r\n            marginRight: \"auto\",\r\n            marginTop: \"20px\",\r\n          }}\r\n          children={\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <Input\r\n                id=\"name\"\r\n                name=\"name\"\r\n                label=\"Seu nome\"\r\n                readOnly={readOnlyFields}\r\n                labelAlignment=\"left\"\r\n                value={formik.values.name}\r\n                style={inputStyles}\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                placeholder=\"Digite aqui...\"\r\n                type=\"text\"\r\n                className=\"rainbow-p-around_medium\"\r\n                error={formik.errors.name ? formik.errors.name : \"\"}\r\n              />\r\n              <Input\r\n                name=\"phone\"\r\n                label=\"Telefone\"\r\n                readOnly={readOnlyFields}\r\n                labelAlignment=\"left\"\r\n                value={formik.values.phone}\r\n                style={inputStyles}\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                placeholder=\"(XX)XXXXXX-XXXX\"\r\n                type=\"text\"\r\n                className=\"rainbow-p-around_medium\"\r\n                error={formik.errors.phone ? formik.errors.phone : \"\"}\r\n              />\r\n            </form>\r\n          }\r\n          footer={\r\n            <div className=\"rainbow-align-content_space-around\">\r\n              <div className=\"rainbow-flex-center\">\r\n                <RenderIf isTrue={readOnlyFields === true}>\r\n                  <Button\r\n                    label=\"Não\"\r\n                    className=\"rainbow-m-right_xx-small\"\r\n                    onClick={editData}\r\n                  />\r\n                  <Button\r\n                    label=\"Sim, prosseguir\"\r\n                    variant=\"outline-brand\"\r\n                    className=\"rainbow-m-right_xx-small\"\r\n                    onClick={() => {\r\n                      confirmData();\r\n                      saveInContext();\r\n                    }}\r\n                  />\r\n                </RenderIf>\r\n                <RenderIf isTrue={readOnlyFields === false}>\r\n                  <Button\r\n                    label=\"Confirmar Dados\"\r\n                    variant=\"outline-brand\"\r\n                    disabled={!formik.isValid}\r\n                    className=\"rainbow-m-right_xx-small\"\r\n                    onClick={() => {\r\n                      confirmData();\r\n                      saveInContext();\r\n                    }}\r\n                  />\r\n                </RenderIf>\r\n              </div>\r\n            </div>\r\n          }\r\n        />\r\n      ) : (\r\n        <form onSubmit={formik.handleSubmit}>\r\n          <Input\r\n            id=\"name\"\r\n            name=\"name\"\r\n            label=\"Seu nome\"\r\n            readOnly={readOnlyFields}\r\n            labelAlignment=\"left\"\r\n            value={formik.values.name}\r\n            style={inputStyles}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            placeholder=\"Digite aqui...\"\r\n            type=\"text\"\r\n            className=\"rainbow-p-around_medium\"\r\n            error={formik.errors.name ? formik.errors.name : \"\"}\r\n          />\r\n          <Input\r\n            name=\"phone\"\r\n            label=\"Telefone\"\r\n            readOnly={readOnlyFields}\r\n            labelAlignment=\"left\"\r\n            value={formik.values.phone}\r\n            style={inputStyles}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            placeholder=\"(XX)XXXXXX-XXXX\"\r\n            type=\"text\"\r\n            className=\"rainbow-p-around_medium\"\r\n            error={formik.errors.phone ? formik.errors.phone : \"\"}\r\n          />\r\n        </form>\r\n      )}\r\n\r\n      <RenderIf isTrue={showFooterButtons}>\r\n        <div className=\"rainbow-m-top_xx-large rainbow-m-bottom_xx-large rainbow-align-content_center rainbow-flex_wrap\">\r\n          <Button\r\n            label=\"Voltar\"\r\n            onClick={handleBackClick}\r\n            variant=\"neutral\"\r\n            className=\"rainbow-m-horizontal_medium\"\r\n          />\r\n          <Button\r\n            label=\"Prosseguir\"\r\n            disabled={!formik.isValid || disableNext}\r\n            onClick={saveInContext}\r\n            variant=\"brand\"\r\n            className=\"rainbow-m-horizontal_medium\"\r\n          />\r\n        </div>\r\n      </RenderIf>\r\n    </>\r\n  );\r\n};\r\n\r\nClientForm.propTypes = {\r\n  handleNextClick: PropTypes.func,\r\n  handleBackClick: PropTypes.func,\r\n  showFooterButtons: PropTypes.bool,\r\n  style: PropTypes.bool\r\n};\r\n\r\nClientForm.defaultProps = {\r\n  showFooterButtons: true,\r\n  card: true\r\n};\r\n\r\nexport default ClientForm;\r\n","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\OrderSubTotal\\index.js",["452","453"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { FaMoneyBill } from \"react-icons/fa\";\r\nimport { Input } from \"react-rainbow-components\";\r\n\r\nimport { ApplicationContext } from \"../../Contexts/ApplicationContext\";\r\nimport { Col, Row, Subtotal } from \"./styles\";\r\n\r\nfunction OrderSubtotal({\r\n  otherCosts,\r\n  variation,\r\n  freightCost,\r\n  additionalValue,\r\n}) {\r\n  const { checkoutProducts } = useContext(ApplicationContext);\r\n  const [subtotal, setSubtotal] = useState(\"0,00\");\r\n\r\n  useEffect(() => {\r\n    sumSubtotal();\r\n  }, [checkoutProducts, otherCosts]);\r\n\r\n  function sumSubtotal() {\r\n    let initialValue = 0;\r\n    if (typeof additionalValue !== \"undefined\") {\r\n      initialValue += additionalValue;\r\n    }\r\n    checkoutProducts.products.map((i) => {\r\n      initialValue += i.salePrice * i.quantity;\r\n    });\r\n    setSubtotal(\r\n      initialValue.toLocaleString(\"pt-br\", {\r\n        minimumFractionDigits: 2,\r\n      })\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {variation === \"input\" ? (\r\n        <Input\r\n          name=\"subtotal\"\r\n          labelAlignment=\"left\"\r\n          value={subtotal.toLocaleString(\"pt-br\", {\r\n            minimumFractionDigits: 2,\r\n          })}\r\n          label=\"Total do Pedido\"\r\n          variant=\"shaded\"\r\n          readOnly\r\n          type=\"text\"\r\n          icon={<FaMoneyBill />}\r\n          className=\"rainbow-p-around_medium\"\r\n        />\r\n      ) : (\r\n        <>\r\n          <Col>\r\n            <Row>Frete:</Row>\r\n            <Row>\r\n              <Subtotal>\r\n                R$\r\n                {freightCost.toLocaleString(\"pt-br\", {\r\n                  minimumFractionDigits: 2,\r\n                })}\r\n              </Subtotal>\r\n            </Row>\r\n          </Col>\r\n          <br />\r\n          <Col>\r\n            <Row>Total:</Row>\r\n            <Row>\r\n              <Subtotal>R${subtotal}</Subtotal>{\" \"}\r\n            </Row>\r\n          </Col>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrderSubtotal;\r\n","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ProductImage\\index.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ProductImage\\styles.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ProductCounter\\index.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\OrderSubTotal\\styles.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\FinishOrder\\styles.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\DeliveryFormData\\index.js",["454","455","456","457","458","459","460","461","462","463"],"import { useFormik } from \"formik\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { FaMotorcycle } from \"react-icons/fa\";\r\nimport { Button, Input, RadioButtonGroup, RenderIf, Select } from \"react-rainbow-components\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { ApplicationContext } from \"../../Contexts/ApplicationContext\";\r\nimport { Api } from \"../../Services/Api\";\r\nimport CompanyLocation from \"../CompanyLocation\";\r\nimport OrderSubTotal from \"../OrderSubTotal\";\r\nimport { Col, Row } from \"./styles\";\r\n\r\nconst DeliveryFormData = ({\r\n  company,\r\n  readOnly,\r\n  handleNextClick,\r\n  handleBackClick,\r\n  showFooterButtons,\r\n  setFreightCost,\r\n}) => {\r\n  const { clientCheckoutData, setClientCheckoutData } = useContext(\r\n    ApplicationContext\r\n  );\r\n  const [deliveryAreas, setDeliveryAreas] = useState([]);\r\n  const [deliveryoptions, setDeliveryoptions] = useState([]);\r\n  const [readOnlyFields, setReadOnlyFields] = useState(false);\r\n  const validationSchema = Yup.object().shape({\r\n    delivery: Yup.string(),\r\n    deliveryArea: Yup.string().required(\"Campo obirgatório\"),\r\n    zipcode: Yup.string().required(\"Campo obirgatório\"),\r\n    street: Yup.string().required(\"Campo obirgatório\"),\r\n    neighborhood: Yup.string().required(\"Campo obirgatório\"),\r\n    complement: Yup.string(\"Campo obirgatório\"),\r\n    change: Yup.number().test(\r\n      \"verify-change\",\r\n      \"O valor do troco está incorreto\",\r\n      function (value) {\r\n        return value < 0 ? false : true;\r\n      }\r\n    ),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      delivery:\r\n        clientCheckoutData !== undefined && clientCheckoutData.delivery\r\n          ? clientCheckoutData.address.delivery\r\n          : \"1\",\r\n      deliveryArea:\r\n        typeof clientCheckoutData.address !== \"undefined\" &&\r\n        clientCheckoutData.deliveryArea\r\n          ? clientCheckoutData.address.deliveryArea\r\n          : \"\",\r\n      deliveryValue:\r\n        typeof clientCheckoutData.address !== \"undefined\" &&\r\n        typeof clientCheckoutData.address.deliveryValue !== \"undefined\"\r\n          ? clientCheckoutData.address.deliveryValue\r\n          : \"0\",\r\n      zipcode:\r\n        typeof clientCheckoutData.address !== \"undefined\" &&\r\n        clientCheckoutData.address &&\r\n        clientCheckoutData.address.zipcode !== null\r\n          ? clientCheckoutData.address.zipcode\r\n          : \"\",\r\n      street:\r\n        typeof clientCheckoutData.address !== \"undefined\" &&\r\n        clientCheckoutData.address\r\n          ? clientCheckoutData.address.street\r\n          : \"\",\r\n      neighborhood:\r\n        clientCheckoutData !== undefined && clientCheckoutData.address\r\n          ? clientCheckoutData.address.neighborhood\r\n          : \"\",\r\n      complement:\r\n        clientCheckoutData !== undefined && clientCheckoutData.address\r\n          ? clientCheckoutData.address.complement\r\n          : \"\",\r\n      paymentMethod:\r\n        clientCheckoutData.deliveryData !== undefined &&\r\n        clientCheckoutData.deliveryData.paymentMethod\r\n          ? clientCheckoutData.deliveryData.paymentMethod\r\n          : \"1\",\r\n      change:\r\n        clientCheckoutData.deliveryData !== undefined &&\r\n        clientCheckoutData.deliveryData.change\r\n          ? clientCheckoutData.deliveryData.change\r\n          : \"0\",\r\n    },\r\n    validationSchema,\r\n    validateOnMount: false,\r\n    validateOnChange: true,\r\n    validateOnBlur: false,\r\n    isInitialValid: false,\r\n  });\r\n\r\n  useEffect(async () => {\r\n    await loadDeliveryAreas();\r\n  }, [company]);\r\n\r\n  useEffect(() => {\r\n    setClientCheckoutData({\r\n      ...clientCheckoutData,\r\n      clientDataIsValid: formik.isValid,\r\n    });\r\n  }, [formik.isValid]);\r\n\r\n  useEffect(() => {\r\n    formik.setFieldValue(\r\n      \"deliveryValue\",\r\n      getDeliveryValueById(formik.values.deliveryArea)\r\n    );\r\n  }, [formik.values.deliveryArea]);\r\n\r\n  async function loadDeliveryAreas() {\r\n    await Api.get(`${company}/deliveryArea/`).then((result) => {\r\n      setDeliveryAreas(result.data);\r\n      let options = [{ value: 0, label: \"Selecione uma localidade\" }];\r\n      result.data.map((item) => {\r\n        options.push({\r\n          value: item.id,\r\n          label: `${item.city}-${item.state}`,\r\n          deliveryCost: item.deliveryCost,\r\n        });\r\n      });\r\n      setDeliveryoptions(options);\r\n      if (\r\n        typeof formik.values.deliveryValue !== \"undefined\" &&\r\n        formik.values.deliveryValue != 0\r\n      ) {\r\n        formik.setFieldValue(\r\n          \"deliveryArea\",\r\n          clientCheckoutData.address.deliveryArea\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  const loadDeliveryAreaById = (deliveryAreaId) => {\r\n    let area = deliveryAreas.filter((i) => i.id === deliveryAreaId);\r\n    return area.length > 0 ? area[0].city + \"-\" + area[0].state : null;\r\n  };\r\n\r\n  const getDeliveryValueById = (id) => {\r\n    let value = deliveryAreas.filter((item) => item.id == id);\r\n    if (value.length === 0) {\r\n      return 0.0;\r\n    }\r\n    return value[0].deliveryValue;\r\n  };\r\n\r\n  const getDeliveryAreaById = (id) => {\r\n    let value = deliveryAreas.filter((item) => item.id == id);\r\n    if (value.length === 0) {\r\n      return null;\r\n    }\r\n    return value[0].deliveryValue;\r\n  };\r\n\r\n  const saveInContext = () => {\r\n    let oldState = clientCheckoutData;\r\n    if (typeof oldState.address === \"undefined\") {\r\n      oldState[\"address\"] = {};\r\n    }\r\n    oldState.address.complement =\r\n      typeof formik.values.complement !== \"undefined\"\r\n        ? formik.values.complement\r\n        : \"\";\r\n    oldState.address.deliveryArea =\r\n      typeof formik.values.deliveryArea !== \"undefined\"\r\n        ? formik.values.deliveryArea\r\n        : \"\";\r\n    oldState.address.id = formik.values.id;\r\n    oldState.address.neighborhood = formik.values.neighborhood;\r\n    oldState.address.state = formik.values.state;\r\n    oldState.address.street = formik.values.street;\r\n    oldState.address.zipcode = formik.values.zipcode;\r\n    oldState.address.delivery = formik.values.delivery;\r\n    oldState.address.deliveryArea = formik.values.deliveryArea;\r\n    oldState.address.deliveryValue =\r\n      typeof formik.values.deliveryValue !== \"undefined\"\r\n        ? formik.values.deliveryValue\r\n        : \"0.00\";\r\n    oldState.address.paymentMethod = formik.values.paymentMethod;\r\n    handleNextClick();\r\n    setClientCheckoutData(oldState);\r\n    setFreightCost(getDeliveryValueById(formik.values.deliveryArea))\r\n  };\r\n\r\n  const deliveryMethods = [\r\n    { value: \"1\", label: \"Delivery\" },\r\n    { value: \"2\", label: \"Retirar\" },\r\n  ];\r\n\r\n  const paymentMethods = [\r\n    { value: \"0\", label: \"Dinheiro\" },\r\n    { value: \"1\", label: \"Cartão\" },\r\n  ];\r\n\r\n  const inputStyles = {\r\n    flex: 1,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Col>\r\n          <Row center>\r\n            <RadioButtonGroup\r\n              labelAlignment=\"left\"\r\n              label=\"Modalidade de entrega\"\r\n              name=\"delivery\"\r\n              className=\"rainbow-m-top_large rainbow-m-bottom_medium\"\r\n              options={deliveryMethods}\r\n              value={formik.values.delivery}\r\n              variant=\"brand\"\r\n              onChange={formik.handleChange}\r\n              error={formik.errors.delivery ? formik.errors.delivery : \"\"}\r\n            />\r\n          </Row>\r\n          <RenderIf isTrue={formik.values.delivery === \"1\"}>\r\n            <Row>\r\n              <RenderIf isTrue={!readOnlyFields}>\r\n                <Select\r\n                  style={inputStyles}\r\n                  labelAlignment=\"left\"\r\n                  name=\"deliveryArea\"\r\n                  label=\"Selecione sua cidade\"\r\n                  hideLabel={false}\r\n                  required\r\n                  onChange={formik.handleChange}\r\n                  value={formik.values.deliveryArea}\r\n                  options={deliveryoptions}\r\n                  className=\"rainbow-p-around_medium\"\r\n                  error={\r\n                    formik.errors.deliveryArea ? formik.errors.deliveryArea : \"\"\r\n                  }\r\n                />\r\n              </RenderIf>\r\n              <RenderIf isTrue={readOnlyFields}>\r\n                <Input\r\n                  style={inputStyles}\r\n                  labelAlignment=\"left\"\r\n                  label=\"Cidade\"\r\n                  hideLabel={false}\r\n                  readOnly\r\n                  onChange={formik.handleChange}\r\n                  value={loadDeliveryAreaById(formik.values.deliveryArea)}\r\n                  className=\"rainbow-p-around_medium\"\r\n                  error={\r\n                    formik.errors.deliveryArea ? formik.errors.deliveryArea : \"\"\r\n                  }\r\n                />\r\n              </RenderIf>\r\n              <Input\r\n                name=\"deliveryValue\"\r\n                style={inputStyles}\r\n                labelAlignment=\"left\"\r\n                value={formik.values.deliveryValue.toLocaleString(\"pt-br\", {\r\n                  minimumFractionDigits: 2,\r\n                })}\r\n                label=\"Taxa de Entrega\"\r\n                variant=\"shaded\"\r\n                readOnly\r\n                icon={<FaMotorcycle />}\r\n                type=\"text\"\r\n                className=\"rainbow-p-around_medium\"\r\n              />\r\n              <OrderSubTotal\r\n                otherCosts={formik.values.deliveryValue}\r\n                variation=\"input\"\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <Input\r\n                readOnly={readOnlyFields}\r\n                name=\"zipcode\"\r\n                style={inputStyles}\r\n                labelAlignment=\"left\"\r\n                required\r\n                value={formik.values.zipcode}\r\n                onChange={formik.handleChange}\r\n                label=\"CEP\"\r\n                placeholder=\"00000000\"\r\n                type=\"number\"\r\n                className=\"rainbow-p-around_medium\"\r\n                error={formik.errors.zipcode ? formik.errors.zipcode : \"\"}\r\n              />\r\n              <Input\r\n                readOnly={readOnlyFields}\r\n                name=\"street\"\r\n                style={inputStyles}\r\n                labelAlignment=\"left\"\r\n                required\r\n                value={formik.values.street}\r\n                onChange={formik.handleChange}\r\n                label=\"Nome da Rua\"\r\n                placeholder=\"Ex: Av pres Getúlio vargas, 394A\"\r\n                type=\"text\"\r\n                className=\"rainbow-p-around_medium\"\r\n                error={formik.errors.street ? formik.errors.street : \"\"}\r\n              />\r\n              <Input\r\n                readOnly={readOnlyFields}\r\n                name=\"neighborhood\"\r\n                style={inputStyles}\r\n                labelAlignment=\"left\"\r\n                required\r\n                onChange={formik.handleChange}\r\n                label=\"Bairro\"\r\n                value={formik.values.neighborhood}\r\n                placeholder=\"Centro\"\r\n                type=\"text\"\r\n                className=\"rainbow-p-around_medium\"\r\n                error={\r\n                  formik.errors.neighborhood ? formik.errors.neighborhood : \"\"\r\n                }\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <Input\r\n                readOnly={readOnlyFields}\r\n                name=\"complement\"\r\n                style={inputStyles}\r\n                labelAlignment=\"left\"\r\n                label=\"Complemento\"\r\n                value={formik.values.complement}\r\n                onChange={formik.handleChange}\r\n                placeholder=\"Ao lado do prédio azul\"\r\n                type=\"text\"\r\n                className=\"rainbow-p-around_medium\"\r\n              />\r\n            </Row>\r\n            <Row>\r\n              <Select\r\n                style={inputStyles}\r\n                labelAlignment=\"left\"\r\n                name=\"paymentMethod\"\r\n                label=\"Forma de Pagamento\"\r\n                hideLabel={false}\r\n                required\r\n                onChange={formik.handleChange}\r\n                value={formik.values.paymentMethod}\r\n                options={paymentMethods}\r\n                className=\"rainbow-p-around_medium\"\r\n              />\r\n              <RenderIf isTrue={formik.values.paymentMethod === \"0\"}>\r\n                <Input\r\n                  readOnly={readOnlyFields}\r\n                  name=\"change\"\r\n                  style={inputStyles}\r\n                  labelAlignment=\"left\"\r\n                  required\r\n                  value={formik.values.change}\r\n                  onChange={formik.handleChange}\r\n                  label=\"Troco\"\r\n                  placeholder=\"0.00\"\r\n                  type=\"number\"\r\n                  min={0}\r\n                  className=\"rainbow-p-around_medium\"\r\n                  error={formik.errors.change ? formik.errors.change : \"\"}\r\n                />\r\n              </RenderIf>\r\n            </Row>\r\n          </RenderIf>\r\n          <RenderIf isTrue={formik.values.delivery === \"2\"}>\r\n            <CompanyLocation />\r\n          </RenderIf>\r\n        </Col>\r\n      </form>\r\n      <RenderIf isTrue={showFooterButtons}>\r\n        <div className=\"rainbow-m-top_xx-large rainbow-m-bottom_xx-large rainbow-align-content_center rainbow-flex_wrap\">\r\n          <Button\r\n            label=\"Voltar\"\r\n            onClick={handleBackClick}\r\n            variant=\"neutral\"\r\n            className=\"rainbow-m-horizontal_medium\"\r\n          />\r\n          <Button\r\n            label=\"Prosseguir\"\r\n            onClick={saveInContext}\r\n            variant=\"brand\"\r\n            className=\"rainbow-m-horizontal_medium\"\r\n          />\r\n        </div>\r\n      </RenderIf>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DeliveryFormData;\r\n","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\DeliveryFormData\\styles.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CompanyLocation\\index.js",["464"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { FaLocationArrow, FaMapMarkerAlt, FaPhone } from \"react-icons/fa\";\r\nimport { Card } from \"react-rainbow-components\";\r\n\r\nimport { ApplicationContext } from \"../../Contexts/ApplicationContext\";\r\nimport { Api } from \"../../Services/Api\";\r\nimport { Col, Row } from \"./styles\";\r\n\r\nfunction CompanyLocation() {\r\n  const { company } = useContext(ApplicationContext);\r\n  const [companyData, setCompanyData] = useState({\r\n    id: 2,\r\n    domain: \"\",\r\n    cpfCnpj: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    isActive: null,\r\n    address: {\r\n      id: null,\r\n      street: \"\",\r\n      neighborhood: \"\",\r\n      complement: \"\",\r\n      zipcode: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n      deliveryArea: null,\r\n    },\r\n    user: null,\r\n    phones: [],\r\n  });\r\n\r\n  useEffect(() => {\r\n    loadCompany();\r\n  }, [company]);\r\n\r\n  async function loadCompany() {\r\n    await Api.get(`${company}/companies/`).then((result) => {\r\n      setCompanyData(result.data);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"rainbow-m-around_large\">\r\n      <Card icon={<FaLocationArrow />} title={companyData.name}>\r\n        <div className=\"rainbow-p-around_xx-large rainbow-align-content_start rainbow-flex_column\">\r\n          <Row>\r\n            <Col center width=\"30px\">\r\n              <FaMapMarkerAlt size=\"16\" />\r\n            </Col>\r\n            <Row>\r\n              <Col>\r\n                <p>{`${companyData.address.street} ${companyData.address.neighborhood} - ${companyData.address.city}-${companyData.address.state}`}</p>\r\n                <p>{companyData.address.complement}</p>\r\n              </Col>\r\n            </Row>\r\n          </Row>\r\n          <Row marginTop={10}>\r\n            <Col center width=\"30px\">\r\n              <FaPhone size=\"16\" />\r\n            </Col>\r\n            <Row>\r\n              <Col>\r\n                {companyData.phones.map((item) => (\r\n                  <p key={item}>{item}</p>\r\n                ))}\r\n              </Col>\r\n            </Row>\r\n          </Row>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CompanyLocation;\r\n","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CompanyLocation\\styles.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\AppHeader\\index.js",[],["465","466"],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\AppHeader\\styles.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\OrderSummary\\index.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\UserButton\\index.js",["467"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { FaCartArrowDown, FaUser, FaUserEdit } from \"react-icons/fa\";\r\nimport { ButtonMenu, MenuItem } from \"react-rainbow-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { ApplicationContext } from \"../../Contexts/ApplicationContext\";\r\nimport LoginModal from \"../LoginModal\";\r\n\r\nfunction UserButton() {\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const { company, authenticatedUser } = useContext(\r\n    ApplicationContext\r\n  );\r\n\r\n  useEffect(() => {}, [authenticatedUser]);\r\n\r\n  const onRequestCloseModal = () => {\r\n    setModalIsOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <LoginModal isOpen={modalIsOpen} onRequestClose={onRequestCloseModal} />\r\n      <ButtonMenu\r\n        menuAlignment=\"right\"\r\n        menuSize=\"medium\"\r\n        buttonVariant=\"brand\"\r\n        icon={<FaUser size={26} />}\r\n      >\r\n        <Link\r\n          to={`\r\n              ${company == \"\" ? `/users/user` : `/${company}/users/user`}\r\n            `}\r\n          style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n        >\r\n          <MenuItem icon={<FaUserEdit />} label=\"Meus dados\" />\r\n        </Link>\r\n        <Link\r\n          to={`/${company}/orders`}\r\n          style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n        >\r\n          <MenuItem icon={<FaCartArrowDown />} label=\"Meus Pedidos\" />\r\n        </Link>\r\n      </ButtonMenu>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserButton;\r\n","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\LoginModal\\index.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\LoginForm\\index.js",["468"],"import { useFormik } from \"formik\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { FaArrowRight } from \"react-icons/fa\";\r\nimport { Button, Input } from \"react-rainbow-components\";\r\nimport { Redirect } from \"react-router\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { ApplicationContext } from \"../../Contexts/ApplicationContext\";\r\nimport { Col, Row } from \"./styles\";\r\n\r\nfunction LoginForm({ onRequestLogin, redirectTo }) {\r\n  const { login, company } = useContext(ApplicationContext);\r\n  const [redirect, setRedirect] = useState(\"\");\r\n  const validationSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .email()\r\n      .email(\"Email inválido\")\r\n      .required(\"Informe o e-mail\"),\r\n    password: Yup.string().min(2, \"Tamanho inválido\").required(),\r\n  });\r\n\r\n  const { handleChange, handleBlur, values, errors } = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema,\r\n  });\r\n\r\n  const handleLogin = async () => {\r\n    await login(values.email, values.password).then(() => {\r\n      if (onRequestLogin !== null && typeof onRequestLogin !== \"undefined\") {\r\n        onRequestLogin();\r\n      }\r\n      if (typeof redirectTo !== \"undefined\" && redirectTo !== \"\") {\r\n        setRedirect(redirectTo);\r\n      }\r\n    });\r\n  };\r\n\r\n  const inputStyles = (value) => {\r\n    return { width: value + \"%\" };\r\n  };\r\n\r\n  return (\r\n    <Col center>\r\n      {typeof redirect !== \"undefined\" && redirect !== \"\" ? (\r\n        <Redirect to={{ pathname: `/${company}/${redirectTo}` }} />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <Row center>\r\n        <form onSubmit={handleLogin} style={{ width: \"400px\" }}>\r\n          <Input\r\n            name=\"email\"\r\n            label=\"E-mail\"\r\n            style={inputStyles(100)}\r\n            value={values.email}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            placeholder=\"email@email.com\"\r\n            type=\"email\"\r\n            className=\"rainbow-p-around_medium\"\r\n            error={errors.email ? errors.email : \"\"}\r\n          />\r\n          <Input\r\n            name=\"password\"\r\n            style={inputStyles(100)}\r\n            label=\"Senha\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            onBlur={handleBlur}\r\n            placeholder=\"senha\"\r\n            type=\"password\"\r\n            className=\"rainbow-p-around_medium\"\r\n            error={errors.password ? errors.password : \"\"}\r\n          />\r\n          <Button\r\n            variant=\"neutral\"\r\n            className=\"rainbow-m-around_medium\"\r\n            onClick={handleLogin}\r\n          >\r\n            Entrar\r\n            <FaArrowRight />\r\n          </Button>\r\n        </form>\r\n      </Row>\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default LoginForm;\r\n","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\LoginModal\\styles.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\LoginForm\\styles.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CompanyLogo\\index.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CompanyLogo\\styles.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\Company\\index.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CompanyForm\\index.js",["469","470"],"import { useFormik } from \"formik\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { FaSave, FaStore } from \"react-icons/fa\";\r\nimport { Avatar, Button, Card, Input, Select } from \"react-rainbow-components\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { ApplicationContext } from \"../../Contexts/ApplicationContext\";\r\nimport { Api } from \"../../Services/Api\";\r\nimport { States } from \"../../Utils/States\";\r\nimport Toast from \"../../Utils/Toast\";\r\nimport FileUpload from \"../FileUpload\";\r\nimport { Row } from \"./styles\";\r\n\r\nfunction CompanyForm() {\r\n  const [companyLogo, setCompanyLogo] = useState();\r\n  const { company } = useContext(ApplicationContext);\r\n  const validationSchema = Yup.object().shape({\r\n    domain: Yup.string()\r\n      .min(2, \"Tamanho inválido\")\r\n      .required(\"Campo obrigatório\"),\r\n    cpfCnpj: Yup.string()\r\n      .min(2, \"Tamanho inválido\")\r\n      .required(\"Campo obrigatório\"),\r\n    name: Yup.string().min(2, \"Tamanho inválido\").required(\"Campo obrigatório\"),\r\n    email: Yup.string().email(\"Email inválido\").required(\"Campo obrigatório\"),\r\n    street: Yup.string().required(\"Campo obrigatório\"),\r\n    neighborhood: Yup.string().required(\"Campo obrigatório\"),\r\n    complement: Yup.string(),\r\n    zipcode: Yup.string().required(\"Campo obrigatório\"),\r\n    city: Yup.string().required(\"Campo obrigatório\"),\r\n    state: Yup.string().required(\"Campo obrigatório\"),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (company !== \"\" && typeof company !== \"undefined\") {\r\n      Api.get(`${company}/companies`).then((response) => {\r\n        let data = response.data;\r\n        formik.values.domain = data.domain;\r\n        formik.values.cpfCnpj = data.cpfCnpj;\r\n        formik.values.name = data.name;\r\n        formik.values.email = data.email;\r\n        formik.values.street = data.address.street;\r\n        formik.values.neighborhood = data.address.neighborhood;\r\n        formik.values.complement = data.address.complement;\r\n        formik.values.zipcode = data.address.zipcode;\r\n        formik.values.city = data.address.city;\r\n        formik.values.state = data.address.state;\r\n        formik.values.logo = data.logo;\r\n        setCompanyLogo(response.data.logo);\r\n      });\r\n    }\r\n  }, [company]);\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      domain: \"\",\r\n      cpfCnpj: \"\",\r\n      name: \"\",\r\n      email: \"\",\r\n      street: \"\",\r\n      neighborhood: \"\",\r\n      complement: \"\",\r\n      zipcode: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n      deliveryArea: \"\",\r\n      logo: \"\",\r\n      phones: [],\r\n    },\r\n    validationSchema,\r\n    onSubmit: (values) => {\r\n      submitData(values);\r\n    },\r\n  });\r\n\r\n  const submitData = async (values) => {\r\n    Api.put(`/${company}/companies/`, {\r\n      domain: values.domain,\r\n      cpfCnpj: values.cpfCnpj,\r\n      name: values.name,\r\n      phones: values.phones,\r\n      email: values.email,\r\n      logo: companyLogo,\r\n      address: {\r\n        street: values.street,\r\n        neighborhood: values.neighborhood,\r\n        complement: values.complement,\r\n        zipcode: values.zipcode,\r\n        city: values.city,\r\n        state: values.state,\r\n      },\r\n    })\r\n      .then((result) => {\r\n        Toast.fire({\r\n          icon: \"success\",\r\n          title: \"Seus dados foram salvos com sucesso!\",\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        Toast.fire({\r\n          icon: \"success\",\r\n          title: error.response.data.msg,\r\n        }).then((e) => {});\r\n      });\r\n  };\r\n\r\n  const setAttachmentId = (id) => {\r\n    setCompanyLogo(id);\r\n  };\r\n\r\n  const inputStyles = {\r\n    flex: 1,\r\n  };\r\n\r\n  const cardStyle = {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  };\r\n\r\n  const inputLabelAlign = \"left\";\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        style={cardStyle}\r\n        icon={<Avatar icon={<FaStore />} />}\r\n        title=\"Dados da Empresa\"\r\n        children={\r\n          <>\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <Row center>\r\n                <FileUpload\r\n                  attachmentId={companyLogo}\r\n                  setAttachmentId={setAttachmentId}\r\n                />\r\n              </Row>\r\n              <Row>\r\n                <Input\r\n                  id=\"domain\"\r\n                  labelAlignment={inputLabelAlign}\r\n                  name=\"domain\"\r\n                  label=\"Domínio\"\r\n                  value={formik.values.domain}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                  style={inputStyles}\r\n                  placeholder=\"dominio.com\"\r\n                  type=\"text\"\r\n                  className=\"rainbow-p-around_medium\"\r\n                  error={formik.errors.domain ? formik.errors.domain : \"\"}\r\n                />\r\n                <Input\r\n                  id=\"cpfCnpj\"\r\n                  labelAlignment={inputLabelAlign}\r\n                  name=\"cpfCnpj\"\r\n                  label=\"CPF | CNPJ\"\r\n                  value={formik.values.cpfCnpj}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                  style={inputStyles}\r\n                  placeholder=\"1234569871233\"\r\n                  type=\"text\"\r\n                  className=\"rainbow-p-around_medium\"\r\n                  error={formik.errors.cpfCnpj ? formik.errors.cpfCnpj : \"\"}\r\n                />\r\n              </Row>\r\n              <Row>\r\n                <Input\r\n                  id=\"name\"\r\n                  labelAlignment={inputLabelAlign}\r\n                  name=\"name\"\r\n                  label=\"Nome\"\r\n                  value={formik.values.name}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                  style={inputStyles}\r\n                  placeholder=\"Nome da sua loja\"\r\n                  type=\"text\"\r\n                  className=\"rainbow-p-around_medium\"\r\n                  error={formik.errors.name ? formik.errors.name : \"\"}\r\n                />\r\n                <Input\r\n                  id=\"email\"\r\n                  labelAlignment={inputLabelAlign}\r\n                  name=\"email\"\r\n                  label=\"E-mail\"\r\n                  value={formik.values.email}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                  style={inputStyles}\r\n                  placeholder=\"seuemail@email.com\"\r\n                  type=\"email\"\r\n                  className=\"rainbow-p-around_medium\"\r\n                  error={formik.errors.email ? formik.errors.email : \"\"}\r\n                />\r\n              </Row>\r\n              <Row>\r\n                <Input\r\n                  id=\"zipcode\"\r\n                  labelAlignment={inputLabelAlign}\r\n                  name=\"zipcode\"\r\n                  label=\"CEP\"\r\n                  value={formik.values.zipcode}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                  style={inputStyles}\r\n                  placeholder=\"00000000\"\r\n                  type=\"text\"\r\n                  className=\"rainbow-p-around_medium\"\r\n                  error={formik.errors.zipcode ? formik.errors.zipcode : \"\"}\r\n                />\r\n                <Input\r\n                  id=\"city\"\r\n                  labelAlignment={inputLabelAlign}\r\n                  name=\"city\"\r\n                  label=\"Cidade\"\r\n                  value={formik.values.city}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                  style={inputStyles}\r\n                  placeholder=\"Sapé\"\r\n                  type=\"text\"\r\n                  className=\"rainbow-p-around_medium\"\r\n                  error={formik.errors.city ? formik.errors.city : \"\"}\r\n                />\r\n                <Select\r\n                  id=\"state\"\r\n                  labelAlignment={inputLabelAlign}\r\n                  name=\"state\"\r\n                  label=\"Estado\"\r\n                  value={formik.values.state}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                  style={inputStyles}\r\n                  placeholder=\"PB\"\r\n                  options={States.UF}\r\n                  type=\"text\"\r\n                  className=\"rainbow-p-around_medium\"\r\n                  error={formik.errors.state ? formik.errors.state : \"\"}\r\n                />\r\n              </Row>\r\n              <Row>\r\n                <Input\r\n                  id=\"street\"\r\n                  labelAlignment={inputLabelAlign}\r\n                  name=\"street\"\r\n                  label=\"Nome da Rua\"\r\n                  value={formik.values.street}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                  style={inputStyles}\r\n                  placeholder=\"Rua Marilda cunha 223A\"\r\n                  type=\"text\"\r\n                  className=\"rainbow-p-around_medium\"\r\n                  error={formik.errors.street ? formik.errors.street : \"\"}\r\n                />\r\n                <Input\r\n                  id=\"neighborhood\"\r\n                  labelAlignment={inputLabelAlign}\r\n                  name=\"neighborhood\"\r\n                  label=\"Bairro\"\r\n                  value={formik.values.neighborhood}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                  style={inputStyles}\r\n                  placeholder=\"Centro\"\r\n                  type=\"text\"\r\n                  className=\"rainbow-p-around_medium\"\r\n                  error={\r\n                    formik.errors.neighborhood ? formik.errors.neighborhood : \"\"\r\n                  }\r\n                />\r\n              </Row>\r\n              <Input\r\n                id=\"complement\"\r\n                labelAlignment={inputLabelAlign}\r\n                name=\"complement\"\r\n                label=\"Complemento\"\r\n                value={formik.values.complement}\r\n                onChange={formik.handleChange}\r\n                onBlur={formik.handleBlur}\r\n                placeholder=\"Complemento do endereço\"\r\n                type=\"text\"\r\n                className=\"rainbow-p-around_medium\"\r\n                error={formik.errors.complement ? formik.errors.complement : \"\"}\r\n              />\r\n              <Button\r\n                className=\"rainbow-m-around_medium\"\r\n                variant=\"border-filled\"\r\n                type=\"submit\"\r\n                className=\"rainbow-m-around_medium\"\r\n              >\r\n                Enviar <FaSave className=\"rainbow-m-left_medium\" />\r\n              </Button>\r\n            </form>\r\n          </>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CompanyForm;\r\n","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CompanyForm\\styles.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ContextLoader\\index.js",["471","472"],"import React, { useContext, useEffect } from \"react\";\r\n\r\nimport { ApplicationContext } from \"../../Contexts/ApplicationContext\";\r\n\r\n// import { Container } from './styles';\r\n\r\n// RESPONSÁVEL POR ATUALIZAR O CONTEXTO GLOBAL DA APLICAÇÃO\r\nfunction ContextLoader({ company }) {\r\n  const {\r\n    updateCheckoutProducts,\r\n    setCompany,\r\n    updateClientDataStorage,\r\n  } = useContext(ApplicationContext);\r\n\r\n  useEffect(() => {\r\n    setCompany(company);\r\n    updateCheckoutProducts(company);\r\n    updateClientDataStorage();\r\n  }, [company]);\r\n\r\n  return null;\r\n}\r\n\r\nexport default ContextLoader;\r\n","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Utils\\States.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\Notification\\index.js",[],["473","474"],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\Orders\\index.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\OrderList\\index.js",["475"],"import PropTypes from \"prop-types\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { FaCashRegister, FaFolderOpen } from \"react-icons/fa\";\r\nimport { Avatar, ButtonIcon, Card, Column, Pagination, Table } from \"react-rainbow-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { ApplicationContext } from \"../../Contexts/ApplicationContext\";\r\nimport { Api } from \"../../Services/Api\";\r\n\r\nfunction OrderList({ adminPerspective }) {\r\n  const [orderListData, setOrderListData] = useState({\r\n    content: [],\r\n    pageable: {\r\n      sort: {\r\n        sorted: true,\r\n        unsorted: false,\r\n        empty: false,\r\n      },\r\n      offset: 0,\r\n      pageNumber: 0,\r\n      pageSize: 0,\r\n      unpaged: false,\r\n      paged: true,\r\n    },\r\n    last: true,\r\n    totalPages: 0,\r\n    totalElements: 0,\r\n    number: 0,\r\n    size: 0,\r\n    first: true,\r\n    numberOfElements: 0,\r\n    empty: false,\r\n  });\r\n  const [currentPage, setCurrentPage] = useState({ currentPage: 0 });\r\n  const [loading, setLoading] = useState(true);\r\n  const { company, clientCheckoutData } = useContext(ApplicationContext);\r\n\r\n  useEffect(() => {\r\n    if (company !== \"\") {\r\n      if (adminPerspective) {\r\n        Api.get(`${company}/order/?page=${currentPage.currentPage}&direction=DESC`).then(\r\n          (response) => {\r\n            setOrderListData(response.data);\r\n            setLoading(false);\r\n          }\r\n        );\r\n      } else {\r\n        Api.get(\r\n          `${company}/order/client/${clientCheckoutData.id}?page=${currentPage.currentPage}&direction=DESC`\r\n        ).then((response) => {\r\n          setOrderListData(response.data);\r\n          setLoading(false);\r\n        });\r\n      }\r\n    }\r\n  }, [company, currentPage]);\r\n\r\n  const handleOnChange = (event, page) => {\r\n    setCurrentPage({ currentPage: page - 1 });\r\n  };\r\n\r\n  const cardStyle = {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        style={cardStyle}\r\n        icon={<Avatar icon={<FaCashRegister />} />}\r\n        title=\"Seus Pedidos\"\r\n        children={\r\n          <div className=\"rainbow-m-bottom_xx-large\">\r\n            <Table\r\n              isLoading={loading}\r\n              pageSize={orderListData.numberOfElements}\r\n              data={orderListData.content}\r\n              keyField={\"id\"}\r\n            >\r\n              <Column width={80} header=\"#ID\" field=\"id\" />\r\n              <Column\r\n                width={120}\r\n                header=\"Data\"\r\n                component={({ row }) => (\r\n                  <p>{new Date(row.creationDate).toLocaleDateString()}</p>\r\n                )}\r\n              />\r\n              <Column header=\"Cliente\" field=\"client.name\" />\r\n              <Column header=\"Endereço\" field=\"address.street\" />\r\n              <Column header=\"Total\" field=\"total\" />\r\n              <Column\r\n                width={60}\r\n                component={({ row }) => (\r\n                  <div className=\"rainbow-p-right_large\">\r\n                    <Link to={`${adminPerspective === false ? `/${company}/orders/order/${row.id}/` : `/${company}/admin/orders/order/${row.id}`}`}>\r\n                      <ButtonIcon variant=\"neutral\" icon={<FaFolderOpen />} />\r\n                    </Link>\r\n                  </div>\r\n                )}\r\n              />\r\n            </Table>\r\n          </div>\r\n        }\r\n        footer={\r\n          <Pagination\r\n            className=\"rainbow-m_auto\"\r\n            pages={orderListData.totalPages}\r\n            activePage={currentPage.currentPage + 1}\r\n            onChange={handleOnChange}\r\n          />\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nOrderList.propTypes = {\r\n  adminPerspective: PropTypes.bool,\r\n};\r\n\r\nOrderList.defaultProps = {\r\n  adminPerspective: false,\r\n};\r\n\r\nexport default OrderList;\r\n","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\Products\\index.js",[],["476","477"],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ProductList\\index.js",["478"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { FaBoxes, FaEdit, FaPlus } from \"react-icons/fa\";\r\nimport { Avatar, ButtonIcon, Card, Column, Pagination, Table } from \"react-rainbow-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { ApplicationContext } from \"../../Contexts/ApplicationContext\";\r\nimport { Api } from \"../../Services/Api\";\r\nimport ProductImage from \"../ProductImage\";\r\nimport { Col, Description, Price, Titile } from \"./styles\";\r\n\r\nfunction ProductList() {\r\n  const [productListData, setProductListData] = useState({\r\n    content: [],\r\n    last: true,\r\n    totalPages: 1,\r\n    totalElements: 3,\r\n    number: 0,\r\n    size: 24,\r\n    first: true,\r\n    numberOfElements: 0,\r\n    empty: false,\r\n  });\r\n  const [currentPage, setCurrentPage] = useState({ currentPage: 0 });\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const {\r\n    company,\r\n    authenticatedUser,\r\n    globalSearch,\r\n    setShowGlobalSearch,\r\n  } = useContext(ApplicationContext);\r\n\r\n  useEffect(() => {\r\n    if (company !== \"\") {\r\n      setShowGlobalSearch(true);\r\n      const options = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: authenticatedUser.token,\r\n        },\r\n      };\r\n      Api.get(\r\n        `${company}/products/?page=${currentPage.currentPage}&name=${globalSearch}`,\r\n        options\r\n      ).then((response) => {\r\n        setProductListData(response.data);\r\n        setLoading(false);\r\n      });\r\n    }\r\n  }, [company, currentPage, globalSearch]);\r\n\r\n  const handleOnChange = (event, page) => {\r\n    setCurrentPage({ currentPage: page - 1 });\r\n  };\r\n\r\n  const cardStyle = {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Card\r\n        style={cardStyle}\r\n        className=\"rainbow-p-bottom_xx-large\"\r\n        icon={<Avatar icon={<FaBoxes />} />}\r\n        title=\"Produtos\"\r\n        actions={\r\n          <Link to={`/${company}/admin/products/product/`}>\r\n            <ButtonIcon\r\n              variant=\"border\"\r\n              tooltip=\"Cadastrar um novo item\"\r\n              icon={<FaPlus />}\r\n            />\r\n          </Link>\r\n        }\r\n        children={\r\n          <div className=\"rainbow-m-bottom_xx-large\">\r\n            <Table\r\n              keyField=\"id\"\r\n              isLoading={loading}\r\n              pageSize={productListData.numberOfElements}\r\n              data={productListData.content}\r\n            >\r\n              <Column header=\"#ID\" field=\"id\" width={80} />\r\n              <Column\r\n                width={130}\r\n                component={({ row }) => <ProductImage id={row.attachment} />}\r\n              />\r\n              <Column\r\n                header=\"Nome\"\r\n                component={({ row }) => (\r\n                  <Col>\r\n                    <Titile>{row.name}</Titile>\r\n                    <Description style={{paddingTop: \"0px\"}}>{row.description}</Description>\r\n                    <Price>R${row.salePrice}</Price>\r\n                  </Col>\r\n                )}\r\n              />\r\n              <Column\r\n                width={60}\r\n                component={({ row }) => (\r\n                  <div className=\"rainbow-p-right_large\">\r\n                    <Link to={`/${company}/admin/products/product/${row.id}`}>\r\n                      <ButtonIcon variant=\"neutral\" icon={<FaEdit />} />\r\n                    </Link>\r\n                  </div>\r\n                )}\r\n              ></Column>\r\n            </Table>\r\n          </div>\r\n        }\r\n        footer={\r\n          <Pagination\r\n            className=\"rainbow-m_auto\"\r\n            pages={productListData.totalPages}\r\n            activePage={currentPage.currentPage + 1}\r\n            onChange={handleOnChange}\r\n          />\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProductList;\r\n","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ProductList\\styles.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\GlobalSearchInput\\index.js",["479"],"import React, { useContext } from \"react\";\r\nimport { ApplicationContext } from \"../../Contexts/ApplicationContext\";\r\nimport { Input } from \"react-rainbow-components\";\r\nimport { FaSearch } from \"react-icons/fa\";\r\n\r\nfunction GlobalSearchInput() {\r\n  const {\r\n    globalSearch,\r\n    setGlobalSearch,\r\n    showGlobalSearch,\r\n    setShowGlobalSearch,\r\n  } = useContext(ApplicationContext);\r\n\r\n  function handleChange(e) {\r\n    let value = e.target.value;\r\n    setGlobalSearch(value);\r\n  }\r\n\r\n  const inputStyles = {\r\n    width: \"40%\",\r\n    marginRight: \"19px\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {showGlobalSearch ? (\r\n        <Input\r\n          style={inputStyles}\r\n          value={globalSearch}\r\n          onChange={handleChange}\r\n          hideLabel\r\n          placeholder=\"Faça uma busca\"\r\n          iconPosition=\"right\"\r\n          icon={<FaSearch />}\r\n        />\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default GlobalSearchInput;\r\n","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Utils\\Toast.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Styles\\GlobalStyle.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\FileUpload\\index.js",["480"],"import PropTypes from \"prop-types\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { FileSelector } from \"react-rainbow-components\";\r\n\r\nimport nophoto from \"../../Assets/nophoto.png\";\r\nimport { ApplicationContext } from \"../../Contexts/ApplicationContext\";\r\nimport { Api, baseURL } from \"../../Services/Api\";\r\nimport { Col, Image } from \"./styles\";\r\n\r\nfunction FileUpload({ attachmentId, setAttachmentId }) {\r\n  const [preview, setPreview] = useState();\r\n  const { company } = useContext(ApplicationContext);\r\n\r\n  useEffect(() => {\r\n    setFilePreview();\r\n  }, [attachmentId, company]);\r\n\r\n  const setFilePreview = () => {\r\n    if (company !== \"\") {\r\n      if (attachmentId === null || typeof attachmentId === \"undefined\") {\r\n        setPreview(nophoto);\r\n      } else {\r\n        setPreview(`${baseURL}/${company}/attachments/${attachmentId}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  const extractAttachmentIdOfURL = (url) => {\r\n    return url.substring(url.lastIndexOf(\"/\") + 1);\r\n  };\r\n\r\n  const sendFile = (fileToUpload) => {\r\n    let formData = new FormData();\r\n    formData.append(\"file\", fileToUpload);\r\n    if (attachmentId === null) {\r\n      Api.post(`/${company}/attachments/`, formData, {\r\n        headers: {\r\n          \"Content-type\": \"multipart/form-data\",\r\n        },\r\n      }).then((res) => {\r\n        setAttachmentId(extractAttachmentIdOfURL(res.headers.location));\r\n      });\r\n    } else {\r\n      Api.put(`/${company}/attachments/${attachmentId}`, formData, {\r\n        headers: {\r\n          \"Content-type\": \"multipart/form-data\",\r\n        },\r\n      }).then((res) => {\r\n        setAttachmentId(extractAttachmentIdOfURL(res.headers.location));\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleImagePreview = (e) => {\r\n    let imageBase64 = nophoto;\r\n    if (e !== undefined) {\r\n      imageBase64 = URL.createObjectURL(e);\r\n      setPreview(imageBase64);\r\n      sendFile(e);\r\n    } else {\r\n      setPreview(nophoto);\r\n    }\r\n  };\r\n\r\n  const selectorStyles = {\r\n    maxWidth: 160,\r\n  };\r\n\r\n  return (\r\n    <Col center>\r\n      <Image src={preview} alt=\"image_preview\" />\r\n      <FileSelector\r\n        placeholder=\"Imagem\"\r\n        style={selectorStyles}\r\n        onChange={(value) => handleImagePreview(value[0])}\r\n      />\r\n    </Col>\r\n  );\r\n}\r\n\r\nFileUpload.propTypes = {\r\n  attachmentId: PropTypes.any,\r\n  setAttachmentId: PropTypes.func,\r\n};\r\n\r\nFileUpload.defaultProps = {\r\n  attachmentId: null,\r\n};\r\n\r\nexport default FileUpload;\r\n","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\FileUpload\\styles.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\Product\\index.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ProductForm\\index.js",["481","482","483","484"],"import { useFormik } from \"formik\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { FaBoxes, FaFolderOpen, FaSave, FaTrash } from \"react-icons/fa\";\r\nimport { Avatar, Button, ButtonIcon, Card, Input, Select, Textarea } from \"react-rainbow-components\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { ApplicationContext } from \"../../Contexts/ApplicationContext\";\r\nimport { Api } from \"../../Services/Api\";\r\nimport Toast from \"../../Utils/Toast\";\r\nimport CategoryModal from \"../CategoryModal\";\r\nimport FileUpload from \"../FileUpload\";\r\nimport { Col, Row } from \"./styles\";\r\n\r\nfunction ProductForm({ id }) {\r\n  const { company } = useContext(ApplicationContext);\r\n  const [productImage, setProductImage] = useState(null);\r\n  const [categories, setCategories] = useState([]);\r\n  const [redirect, setRedirect] = useState(\"\");\r\n  const [categoryModalIsOpen, setCategoryModalIsOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n    loadCategories();\r\n  }, [company, id]);\r\n\r\n  const loadData = () => {\r\n    if (id && company !== \"\") {\r\n      Api.get(`${company}/products/${id}`).then((response) => {\r\n        let data = response.data;\r\n        formik.values.id = data.id;\r\n        formik.values.name = data.name;\r\n        formik.values.description = data.description;\r\n        formik.values.costPrice = data.costPrice;\r\n        formik.values.salePrice = data.salePrice;\r\n        formik.values.productCategory = data.productCategory.id;\r\n        setProductImage(response.data.attachment);\r\n      });\r\n    }\r\n  };\r\n\r\n  const gotoList = () => {\r\n    setRedirect(`/${company}/admin/products/`);\r\n  };\r\n\r\n  const loadCategories = async () => {\r\n    if (company !== \"\") {\r\n      Api.get(`${company}/product/categories/`).then((response) => {\r\n        let categoriesOptions = [];\r\n        categoriesOptions.push({\r\n          label: \"Selecione uma categoria\",\r\n          value: null,\r\n        });\r\n        response.data.map((i) => {\r\n          categoriesOptions.push({ label: i.name, value: i.id });\r\n        });\r\n        setCategories(categoriesOptions);\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = () => {\r\n    Swal.fire({\r\n      title: `Deseja deletar ${formik.values.name}?`,\r\n      icon: \"question\",\r\n      showDenyButton: true,\r\n      confirmButtonText: `Sim`,\r\n      denyButtonText: `Não`,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        Api.delete(`${company}/products/${id}`).then(() => {\r\n          gotoList();\r\n          Toast.fire({\r\n            icon: \"success\",\r\n            title: \"Produto removido com sucesso!\",\r\n          }).then((e) => {});\r\n        });\r\n      } else if (result.isDenied) {\r\n      }\r\n    });\r\n  };\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    id: Yup.string(),\r\n    name: Yup.string().min(2, \"Tamanho inválido\").required(\"Campo obrigatório\"),\r\n    description: Yup.string()\r\n      .min(2, \"Tamanho inválido\")\r\n      .required(\"Campo obrigatório\"),\r\n    costPrice: Yup.number().required(),\r\n    salePrice: Yup.number().required(),\r\n    productCategory: Yup.number().required(\"Campo obrigatório\"),\r\n  });\r\n\r\n  const submitData = async (values) => {\r\n    if (typeof id !== \"undefined\" && id !== null) {\r\n      Api.put(`/${company}/products/${id}`, {\r\n        name: values.name,\r\n        description: values.description,\r\n        costPrice: values.costPrice,\r\n        salePrice: values.salePrice,\r\n        productCategory: values.productCategory,\r\n        attachment: productImage,\r\n      }).then(() => {\r\n        gotoList();\r\n        Toast.fire({\r\n          icon: \"success\",\r\n          title: \"Seus dados foram atualizados com sucesso!\",\r\n        });\r\n      });\r\n    } else {\r\n      Api.post(`/${company}/products/`, {\r\n        name: values.name,\r\n        description: values.description,\r\n        costPrice: values.costPrice,\r\n        salePrice: values.salePrice,\r\n        productCategory: values.productCategory,\r\n        attachment: productImage,\r\n      }).then(() => {\r\n        gotoList();\r\n        Toast.fire({\r\n          icon: \"success\",\r\n          title: \"Produto salvo com sucesso!\",\r\n        }).then((e) => {});\r\n      });\r\n    }\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      id: \"\",\r\n      name: \"\",\r\n      description: \"\",\r\n      costPrice: 0.0,\r\n      salePrice: 0.0,\r\n      productCategory: \"\",\r\n    },\r\n    validationSchema,\r\n    onSubmit: async (values) => {\r\n      await submitData(values);\r\n    },\r\n  });\r\n\r\n  const setAttachmentId = (id) => {\r\n    setProductImage(id);\r\n  };\r\n\r\n  const inputStyles = {\r\n    flex: 1,\r\n  };\r\n\r\n  const cardStyle = {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  };\r\n\r\n  const inputLabelAlign = \"left\";\r\n\r\n  return (\r\n    <>\r\n      {redirect !== \"\" ? <Redirect push to={redirect} /> : null}\r\n      <CategoryModal\r\n        isOpen={categoryModalIsOpen}\r\n        onRequestClose={() => {\r\n          loadCategories();\r\n          setCategoryModalIsOpen(false);\r\n        }}\r\n      />\r\n      <Card\r\n        style={cardStyle}\r\n        icon={<Avatar icon={<FaBoxes />} />}\r\n        title=\"Dados do Produto\"\r\n        children={\r\n          <>\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <Row>\r\n                <FileUpload\r\n                  attachmentId={productImage}\r\n                  setAttachmentId={setAttachmentId}\r\n                />\r\n                <Col>\r\n                  <Input\r\n                    id=\"name\"\r\n                    labelAlignment={inputLabelAlign}\r\n                    name=\"name\"\r\n                    label=\"Nome\"\r\n                    value={formik.values.name}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    style={inputStyles}\r\n                    placeholder=\"Smartphone 6 4GB ram Octa Core 2.2\"\r\n                    type=\"text\"\r\n                    className=\"rainbow-p-around_medium\"\r\n                    error={formik.errors.name ? formik.errors.name : \"\"}\r\n                  />\r\n                  <Textarea\r\n                    id=\"description\"\r\n                    labelAlignment={inputLabelAlign}\r\n                    name=\"description\"\r\n                    rows={3}\r\n                    label=\"Descrição\"\r\n                    value={formik.values.description}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    style={inputStyles}\r\n                    placeholder=\"Breve descrição do produto\"\r\n                    type=\"text\"\r\n                    className=\"rainbow-p-around_medium\"\r\n                    error={\r\n                      formik.errors.description ? formik.errors.description : \"\"\r\n                    }\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Input\r\n                  id=\"costPrice\"\r\n                  labelAlignment={inputLabelAlign}\r\n                  name=\"costPrice\"\r\n                  label=\"Preço de Custo\"\r\n                  value={formik.values.costPrice}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                  style={inputStyles}\r\n                  placeholder=\"0,00\"\r\n                  type=\"number\"\r\n                  className=\"rainbow-p-around_medium\"\r\n                  error={formik.errors.costPrice ? formik.errors.costPrice : \"\"}\r\n                />\r\n                <Input\r\n                  id=\"salePrice\"\r\n                  labelAlignment={inputLabelAlign}\r\n                  name=\"salePrice\"\r\n                  label=\"Preço de Venda\"\r\n                  value={formik.values.salePrice}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                  style={inputStyles}\r\n                  placeholder=\"0,00\"\r\n                  type=\"number\"\r\n                  className=\"rainbow-p-around_medium\"\r\n                  error={formik.errors.salePrice ? formik.errors.salePrice : \"\"}\r\n                />\r\n                <div\r\n                  style={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"row\",\r\n                    flex: 1,\r\n                  }}\r\n                >\r\n                  <Select\r\n                    id=\"productCategory\"\r\n                    labelAlignment={inputLabelAlign}\r\n                    name=\"productCategory\"\r\n                    label=\"Categoria\"\r\n                    value={formik.values.productCategory}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    style={inputStyles}\r\n                    options={categories}\r\n                    type=\"text\"\r\n                    className=\"rainbow-p-around_medium\"\r\n                    error={\r\n                      formik.errors.productCategory\r\n                        ? formik.errors.productCategory\r\n                        : \"\"\r\n                    }\r\n                  />\r\n                  <ButtonIcon\r\n                    style={{\r\n                      marginTop: \"auto\",\r\n                      marginBottom: \"15px\",\r\n                      marginRight: \"15px\",\r\n                    }}\r\n                    icon={<FaFolderOpen />}\r\n                    variant=\"border\"\r\n                    onClick={() => setCategoryModalIsOpen(true)}\r\n                  />\r\n                </div>\r\n              </Row>\r\n              <Button\r\n                className=\"rainbow-m-around_medium\"\r\n                variant=\"destructive\"\r\n                type=\"button\"\r\n                className=\"rainbow-m-around_medium\"\r\n                onClick={() => handleDelete()}\r\n                disabled={id === null || typeof id === \"undefined\"}\r\n              >\r\n                Deletar <FaTrash className=\"rainbow-m-left_medium\" />\r\n              </Button>\r\n              <Button\r\n                className=\"rainbow-m-around_medium\"\r\n                variant=\"border-filled\"\r\n                type=\"submit\"\r\n                className=\"rainbow-m-around_medium\"\r\n              >\r\n                Enviar <FaSave className=\"rainbow-m-left_medium\" />\r\n              </Button>\r\n            </form>\r\n          </>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ProductForm;\r\n","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\ProductForm\\styles.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CategoryModal\\index.js",["485","486"],"import React, { useState, useEffect } from \"react\";\r\nimport { Modal } from \"react-rainbow-components\";\r\nimport CategoryForm from \"../CategoryForm\";\r\n\r\nfunction CategoryModal({ id, isOpen, onRequestClose }) {\r\n  \r\n  function handleOnClose() {\r\n    if (onRequestClose !== null || typeof onRequestClose !== \"undefined\") {\r\n      onRequestClose();\r\n    }\r\n  }\r\n\r\n  const modalStyles = {\r\n    maxWidth: \"400px\",\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      style={modalStyles}\r\n      isOpen={isOpen}\r\n      size=\"large\"\r\n      onRequestClose={handleOnClose}\r\n    >\r\n      <CategoryForm id={id} />\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default CategoryModal;\r\n","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CategoryForm\\index.js",["487","488","489"],"import { useFormik } from \"formik\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { FaSave, FaTrash } from \"react-icons/fa\";\r\nimport { Button, Input } from \"react-rainbow-components\";\r\nimport Swal from \"sweetalert2\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { ApplicationContext } from \"../../Contexts/ApplicationContext\";\r\nimport { Api } from \"../../Services/Api\";\r\nimport Toast from \"../../Utils/Toast\";\r\nimport FileUpload from \"../FileUpload\";\r\nimport { Col, Row } from \"./styles\";\r\n\r\nfunction CategoryForm({ id }) {\r\n  const { company } = useContext(ApplicationContext);\r\n  const [categoryImage, setCategoryImage] = useState();\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [company, id]);\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    name: Yup.string().required(\"Campo obrigatório\"),\r\n  });\r\n\r\n  const loadData = () => {\r\n    if (company !== \"\" && typeof id !== \"undefined\") {\r\n      Api.get(`${company}/product/categories/${id}`).then((result) => {\r\n        formik.values.name = result.name;\r\n        formik.values.attachment = result.attachment;\r\n      });\r\n    }\r\n  };\r\n\r\n  const submitData = (values) => {\r\n    if (typeof id !== \"undefined\" || id === null) {\r\n      updateData(values);\r\n    } else {\r\n      saveData(values);\r\n    }\r\n  };\r\n\r\n  const updateData = async (values) => {\r\n    if (company !== \"\") {\r\n      Api.put(`${company}/product/categories/${id}`, {\r\n        name: values.name,\r\n        attachment: categoryImage,\r\n      }).then(() => {\r\n        Toast.fire({\r\n          icon: \"success\",\r\n          title: \"Seus dados foram atualizados com sucesso!\",\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  const saveData = async (values) => {\r\n    if (company !== \"\") {\r\n      Api.post(`${company}/product/categories/`, {\r\n        name: values.name,\r\n        attachment: categoryImage,\r\n      }).then(() => {\r\n        Toast.fire({\r\n          icon: \"success\",\r\n          title: \"Seus dados foram salvos com sucesso!\",\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    Swal.fire({\r\n      title: `Deseja deletar ${formik.values.name}?`,\r\n      icon: \"question\",\r\n      showDenyButton: true,\r\n      confirmButtonText: `Sim`,\r\n      denyButtonText: `Não`,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        Api.delete(`${company}/product/categories/${id}`).then(() => {\r\n          Toast.fire({\r\n            icon: \"success\",\r\n            title: \"Categoria removida com sucesso!\",\r\n          }).then((e) => {});\r\n        });\r\n      } else if (result.isDenied) {\r\n      }\r\n    });\r\n  };\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      name: \"\",\r\n      attachment: null,\r\n    },\r\n    validationSchema,\r\n    onSubmit: async (values) => {\r\n      await submitData(values);\r\n    },\r\n  });\r\n\r\n  const inputLabelAlign = \"left\";\r\n\r\n  const inputStyles = {\r\n    flex: 1,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {categoryImage}\r\n      <form onSubmit={formik.handleSubmit}>\r\n        <Col center>\r\n          <Row center>\r\n            <FileUpload\r\n              attachmentId={categoryImage}\r\n              setAttachmentId={setCategoryImage}\r\n            />\r\n          </Row>\r\n          <Row center>\r\n            <Input\r\n              id=\"name\"\r\n              labelAlignment={inputLabelAlign}\r\n              name=\"name\"\r\n              label=\"Nome\"\r\n              value={formik.values.name}\r\n              onChange={formik.handleChange}\r\n              onBlur={formik.handleBlur}\r\n              style={inputStyles}\r\n              placeholder=\"Vestuário\"\r\n              type=\"text\"\r\n              className=\"rainbow-p-around_medium\"\r\n              error={formik.errors.name ? formik.errors.name : \"\"}\r\n            />\r\n          </Row>\r\n        </Col>\r\n        <Row center>\r\n          <Button\r\n            className=\"rainbow-m-around_medium\"\r\n            variant=\"destructive\"\r\n            type=\"button\"\r\n            className=\"rainbow-m-around_medium\"\r\n            onClick={() => handleDelete()}\r\n            disabled={id === null || typeof id === \"undefined\"}\r\n          >\r\n            Deletar <FaTrash className=\"rainbow-m-left_medium\" />\r\n          </Button>\r\n          <Button\r\n            className=\"rainbow-m-around_medium\"\r\n            variant=\"border-filled\"\r\n            type=\"submit\"\r\n            className=\"rainbow-m-around_medium\"\r\n          >\r\n            Enviar <FaSave className=\"rainbow-m-left_medium\" />\r\n          </Button>\r\n        </Row>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CategoryForm;\r\n","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CategoryForm\\styles.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\OrderDetail\\index.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\OrderDetailsForm\\index.js",["490","491"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { FaCar, FaMotorcycle, FaReceipt } from \"react-icons/fa\";\r\nimport { Avatar, Badge, Card, Input } from \"react-rainbow-components\";\r\n\r\nimport { ApplicationContext } from \"../../Contexts/ApplicationContext\";\r\nimport { Api } from \"../../Services/Api\";\r\nimport OrderItens from \"../OrderItens\";\r\nimport { Row } from \"./styles\";\r\n\r\nfunction OrderDetailsForm({ id }) {\r\n  const { company } = useContext(ApplicationContext);\r\n  const [orderData, setOrderData] = useState({\r\n    id: 1,\r\n    observation: \"\",\r\n    client: {\r\n      id: 2,\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      address: [],\r\n    },\r\n    address: {\r\n      id: \"\",\r\n      street: \"\",\r\n      neighborhood: \"\",\r\n      complement: \"\",\r\n      zipcode: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n    },\r\n    company: {\r\n      id: \"\",\r\n      domain: \"\",\r\n      cpfCnpj: \"\",\r\n      name: \"\",\r\n      email: \"\",\r\n      isActive: true,\r\n      phones: [],\r\n      addresses: [\r\n        {\r\n          id: 1,\r\n          street: \"\",\r\n          neighborhood: \"\",\r\n          complement: \"\",\r\n          zipcode: \"\",\r\n          city: \"\",\r\n          state: \"\",\r\n        },\r\n      ],\r\n      creationDate: \"\",\r\n      modifiedDate: null,\r\n    },\r\n    itens: [],\r\n    discount: 0.0,\r\n    freightCost: 0.0,\r\n    delivery: true,\r\n    paymentMethod: \"\",\r\n    change: 0.0,\r\n    creationDate: \"\",\r\n    modifiedDate: null,\r\n    total: 0.0,\r\n  });\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [company, id]);\r\n\r\n  const cardStyle = {\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  };\r\n\r\n  const inputStyles = {\r\n    flex: 1,\r\n    paddingTop: \"0px\",\r\n    paddingButton: \"0px\",\r\n    fontWeight: \"bold\",\r\n  };\r\n\r\n  const inputLabelAlign = \"left\";\r\n\r\n  const loadData = async () => {\r\n    if (company !== \"\" && typeof id !== \"undefined\") {\r\n      await Api.get(`${company}/order/${id}`).then((response) => {\r\n        setOrderData(response.data);\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      style={cardStyle}\r\n      icon={<Avatar icon={<FaReceipt />} />}\r\n      title=\"Dados do Pedido\"\r\n      children={\r\n        <>\r\n          <Row>\r\n            <Input\r\n              id=\"name\"\r\n              readOnly\r\n              labelAlignment={inputLabelAlign}\r\n              name=\"name\"\r\n              label=\"Nome\"\r\n              value={orderData.client.name}\r\n              style={inputStyles}\r\n              type=\"text\"\r\n              className=\"rainbow-p-around_medium\"\r\n            />\r\n            <Input\r\n              id=\"phone\"\r\n              readOnly\r\n              labelAlignment={inputLabelAlign}\r\n              name=\"phone\"\r\n              label=\"Telefone\"\r\n              value={orderData.client.phone}\r\n              style={inputStyles}\r\n              type=\"text\"\r\n              className=\"rainbow-p-around_medium\"\r\n            />\r\n          </Row>\r\n          <Row>\r\n            {orderData.delivery ? (\r\n              <Badge\r\n                style={inputStyles}\r\n                variant=\"brand\"\r\n                title=\"O pedido deve ser entregue no endereço do cliente.\"\r\n                className=\"rainbow-m-around_medium\"\r\n              >\r\n                <FaMotorcycle size=\"23\" />\r\n                Entrega Delivery\r\n              </Badge>\r\n            ) : (\r\n              <Badge\r\n                style={inputStyles}\r\n                variant=\"warning\"\r\n                title=\"O cliente solicitou retirada no estabelecimento.\"\r\n                className=\"rainbow-m-around_medium\"\r\n              >\r\n                <FaCar size=\"23\" />\r\n                Retirada\r\n              </Badge>\r\n            )}\r\n          </Row>\r\n          <Row>\r\n            <Input\r\n              id=\"zipcode\"\r\n              readOnly\r\n              labelAlignment={inputLabelAlign}\r\n              name=\"zipcode\"\r\n              label=\"CEP\"\r\n              value={orderData.address.zipcode}\r\n              style={inputStyles}\r\n              type=\"text\"\r\n              className=\"rainbow-p-around_medium\"\r\n            />\r\n            <Input\r\n              id=\"city\"\r\n              readOnly\r\n              labelAlignment={inputLabelAlign}\r\n              name=\"city\"\r\n              label=\"Cidade\"\r\n              value={orderData.address.city + \"-\" + orderData.address.state}\r\n              style={inputStyles}\r\n              type=\"text\"\r\n              className=\"rainbow-p-around_medium\"\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <Input\r\n              id=\"street\"\r\n              readOnly\r\n              labelAlignment={inputLabelAlign}\r\n              name=\"street\"\r\n              label=\"Endereço\"\r\n              value={orderData.address.street}\r\n              style={inputStyles}\r\n              type=\"text\"\r\n              className=\"rainbow-p-around_medium\"\r\n            />\r\n            <Input\r\n              id=\"complement\"\r\n              readOnly\r\n              labelAlignment={inputLabelAlign}\r\n              name=\"complement\"\r\n              label=\"Complemento\"\r\n              value={orderData.address.complement}\r\n              style={inputStyles}\r\n              type=\"text\"\r\n              className=\"rainbow-p-around_medium\"\r\n            />\r\n          </Row>\r\n          <Row>\r\n            <Input\r\n              id=\"paymentMethod\"\r\n              readOnly\r\n              labelAlignment={inputLabelAlign}\r\n              name=\"paymentMethod\"\r\n              label=\"Forma de Pagamento\"\r\n              value={\r\n                orderData.paymentMethod === \"CREDIT_CARD\"\r\n                  ? \"CARTÃO\"\r\n                  : \"DINHEIRO\"\r\n              }\r\n              style={inputStyles}\r\n              type=\"text\"\r\n              className=\"rainbow-p-around_medium\"\r\n            />\r\n            {orderData.paymentMethod == !\"CREDIT_CARD\" ? (\r\n              <Input\r\n                id=\"change\"\r\n                readOnly\r\n                labelAlignment={inputLabelAlign}\r\n                name=\"change\"\r\n                label=\"Troco\"\r\n                value={orderData.change.toLocaleString(\"pt-br\", {\r\n                  minimumFractionDigits: 2,\r\n                })}\r\n                style={inputStyles}\r\n                type=\"text\"\r\n                className=\"rainbow-p-around_medium\"\r\n              />\r\n            ) : null}\r\n\r\n            {orderData.delivery ? (\r\n              <Input\r\n                id=\"freightCost\"\r\n                readOnly\r\n                labelAlignment={inputLabelAlign}\r\n                name=\"freightCost\"\r\n                label=\"Custo de Frete\"\r\n                value={orderData.freightCost}\r\n                style={inputStyles}\r\n                type=\"text\"\r\n                className=\"rainbow-p-around_medium\"\r\n              />\r\n            ) : null}\r\n          </Row>\r\n            <OrderItens itens={orderData.itens} total={orderData.total}/>\r\n        </>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport default OrderDetailsForm;\r\n","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\OrderDetailsForm\\styles.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\OrderItens\\index.js",["492","493"],"import React from \"react\";\r\nimport { Table, Column, ButtonIcon } from \"react-rainbow-components\";\r\nimport OrderSubtotal from \"../OrderSubTotal\";\r\nimport ProductImage from \"../ProductImage\";\r\nimport { TableFooter, Col, Row } from \"./styles\";\r\n\r\nfunction OrderItens({ itens, total }) {\r\n  return (\r\n    <>\r\n      <Table\r\n        id=\"order-itens\"\r\n        keyField=\"id\"\r\n        isLoading={false}\r\n        data={itens}\r\n        emptyTitle=\"Sua sacola de compras está vazia.\"\r\n        emptyDescription=\"Por enquanto :)\"\r\n        variant=\"default\"\r\n      >\r\n        <Column\r\n          width={160}\r\n          component={({ row }) => <ProductImage id={row.attachment} />}\r\n        />\r\n        <Column\r\n          header=\"Descrição\"\r\n          field=\"name\"\r\n          component={({ row }) => (\r\n            <p>{`${row.quantity} X ${row.name}`}</p>\r\n          )}\r\n        />\r\n        <Column header=\"Valor Unitário\" field=\"salePrice\" width={160} />\r\n        <Column\r\n          header=\"Total\"\r\n          width={160}\r\n          style={{ \"text-align\": \"center\" }}\r\n          component={({ row }) => (\r\n            <p>\r\n              {(row.quantity * row.salePrice).toLocaleString(\"pt-br\", {\r\n                minimumFractionDigits: 2,\r\n              })}\r\n            </p>\r\n          )}\r\n        />\r\n      </Table>\r\n      <TableFooter>\r\n        <Row justify=\"end\">\r\n          <Col justify=\"flex-end\">\r\n            <Col>\r\n              <Row>Total:</Row>\r\n              <Row>\r\n                <h1 style={{ fontSize: \"1.5em\" }}>\r\n                  R$\r\n                  {total.toLocaleString(\"pt-br\", {\r\n                    minimumFractionDigits: 2,\r\n                  })}\r\n                </h1>{\" \"}\r\n              </Row>\r\n            </Col>\r\n          </Col>\r\n        </Row>\r\n      </TableFooter>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default OrderItens;\r\n","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\OrderItens\\styles.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\User\\index.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\UserForm\\index.js",["494","495","496","497"],"import { useFormik } from \"formik\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { FaPersonBooth, FaSave, FaTrash } from \"react-icons/fa\";\r\nimport { Avatar, Button, Card, Input, RenderIf, Select, Spinner } from \"react-rainbow-components\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\n\r\nimport { ApplicationContext } from \"../../Contexts/ApplicationContext\";\r\nimport { Api } from \"../../Services/Api\";\r\nimport { States } from \"../../Utils/States\";\r\nimport Toast from \"../../Utils/Toast\";\r\nimport AddressList from \"../AddressList\";\r\nimport { Row } from \"./styles\";\r\n\r\nfunction UserForm() {\r\n  const [redirect, setRedirect] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const { company, authenticatedUser } = useContext(ApplicationContext);\r\n\r\n  useEffect(async () => {\r\n    loadData();\r\n    setIsLoading(false);\r\n  }, [authenticatedUser]);\r\n\r\n  useEffect(() => {}, []);\r\n\r\n  const validationSchema = Yup.object().shape({\r\n    id: Yup.string(),\r\n    name: Yup.string().min(2, \"Tamanho inválido\"),\r\n    email: Yup.string()\r\n      .email()\r\n      .email(\"Email inválido\")\r\n      .required(\"Campo obrigatório\"),\r\n    password: Yup.string()\r\n      .min(8, \"Tamanho inválido\")\r\n      .required(\"Campo obrigatório\"),\r\n    phone: Yup.string()\r\n      .min(2, \"Tamanho inválido\")\r\n      .required(\"Campo obrigatório\"),\r\n    street: Yup.string()\r\n      .min(2, \"Tamanho inválido\")\r\n      .required(\"Campo obrigatório\"),\r\n    neighborhood: Yup.string()\r\n      .min(2, \"Tamanho inválido\")\r\n      .required(\"Campo obrigatório\"),\r\n    complement: Yup.string(),\r\n    zipcode: Yup.string()\r\n      .min(2, \"Tamanho inválido\")\r\n      .required(\"Campo obrigatório\"),\r\n    city: Yup.string().min(2, \"Tamanho inválido\").required(\"Campo obrigatório\"),\r\n    state: Yup.string()\r\n      .min(2, \"Tamanho inválido\")\r\n      .required(\"Campo obrigatório\"),\r\n  });\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      id: \"\",\r\n      name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      phone: \"\",\r\n      street: \"\",\r\n      neighborhood: \"\",\r\n      complement: \"\",\r\n      zipcode: \"\",\r\n      city: \"\",\r\n      state: \"\",\r\n    },\r\n    validationSchema,\r\n    onSubmit: async (values) => {\r\n      await submitData(values);\r\n    },\r\n  });\r\n\r\n  const loadData = () => {\r\n    let data = authenticatedUser;\r\n    formik.values.id = data.id;\r\n    formik.values.name = data.name;\r\n    formik.values.email = data.email;\r\n    formik.values.password = data.password;\r\n    formik.values.phone = data.phone;\r\n  };\r\n\r\n  const submitData = async (values) => {\r\n    if (\r\n      authenticatedUser !== null ||\r\n      typeof authenticatedUser !== \"undefined\"\r\n    ) {\r\n      await updateData(values);\r\n    } else {\r\n      await saveData(values);\r\n    }\r\n  };\r\n\r\n  const saveData = async (values) => {\r\n    await Api.post(`/clients/`, {\r\n      name: values.name,\r\n      email: values.email,\r\n      password: values.password,\r\n      phone: values.phone,\r\n      address: {\r\n        street: values.street,\r\n        neighborhood: values.neighborhood,\r\n        complement: values.complement,\r\n        zipcode: values.zipcode,\r\n        city: values.city,\r\n        state: values.state,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        setRedirect(`/${company}/`);\r\n        Toast.fire({\r\n          icon: \"success\",\r\n          title: \"Cadastro efetuado com sucesso!\",\r\n        }).then((e) => {});\r\n      })\r\n      .catch((error) => {\r\n        Toast.fire({\r\n          icon: \"success\",\r\n          title: error.response.data.msg,\r\n        }).then((e) => {});\r\n      });\r\n  };\r\n\r\n  const updateData = async (values) => {\r\n    await Api.put(`/clients/${authenticatedUser.id}`, {\r\n      name: values.name,\r\n      email: values.email,\r\n      password: values.password,\r\n      phone: values.phone,\r\n      address: {\r\n        street: values.street,\r\n        neighborhood: values.neighborhood,\r\n        complement: values.complement,\r\n        zipcode: values.zipcode,\r\n        city: values.city,\r\n        state: values.state,\r\n      },\r\n    }).then((response) => {\r\n      Toast.fire({\r\n        icon: \"success\",\r\n        title: \"Dados Atualizados com sucesso, realize o login!\",\r\n      }).then((e) => {});\r\n    });\r\n  };\r\n\r\n  const handleDelete = () => {};\r\n\r\n  const inputStyles = {\r\n    flex: 1,\r\n  };\r\n\r\n  const cardStyle = {\r\n    width: \"85%\",\r\n    marginLeft: \"auto\",\r\n    marginRight: \"auto\",\r\n  };\r\n\r\n  const inputLabelAlign = \"left\";\r\n\r\n  return (\r\n    <>\r\n      <Spinner variant=\"brand\" isVisible={isLoading} />\r\n      {redirect !== \"\" ? <Redirect push to={redirect} /> : null}\r\n      <Card\r\n        style={cardStyle}\r\n        icon={<Avatar icon={<FaPersonBooth />} />}\r\n        title=\"Dados do Cliente\"\r\n        children={\r\n          <>\r\n            <form onSubmit={formik.handleSubmit}>\r\n              <Row>\r\n                <Input\r\n                  id=\"name\"\r\n                  labelAlignment={inputLabelAlign}\r\n                  name=\"name\"\r\n                  label=\"Nome\"\r\n                  value={formik.values.name}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                  style={inputStyles}\r\n                  placeholder=\"Digite o seu nome\"\r\n                  type=\"text\"\r\n                  className=\"rainbow-p-around_medium\"\r\n                  error={formik.errors.name ? formik.errors.name : \"\"}\r\n                />\r\n                <Input\r\n                  id=\"email\"\r\n                  labelAlignment={inputLabelAlign}\r\n                  name=\"email\"\r\n                  label=\"E-mail\"\r\n                  value={formik.values.email}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                  style={inputStyles}\r\n                  placeholder=\"email@email.com\"\r\n                  type=\"text\"\r\n                  className=\"rainbow-p-around_medium\"\r\n                  error={formik.errors.email ? formik.errors.email : \"\"}\r\n                />\r\n              </Row>\r\n              <Row>\r\n                <Input\r\n                  id=\"phone\"\r\n                  labelAlignment={inputLabelAlign}\r\n                  name=\"phone\"\r\n                  label=\"Telefone\"\r\n                  value={formik.values.phone}\r\n                  onChange={formik.handleChange}\r\n                  onBlur={formik.handleBlur}\r\n                  style={inputStyles}\r\n                  placeholder=\"(XX)XXXXXXXX\"\r\n                  type=\"text\"\r\n                  className=\"rainbow-p-around_medium\"\r\n                  error={formik.errors.phone ? formik.errors.phone : \"\"}\r\n                />\r\n              </Row>\r\n              <RenderIf\r\n                isTrue={\r\n                  authenticatedUser === null ||\r\n                  typeof authenticatedUser == \"undefined\"\r\n                }\r\n              >\r\n                <Row>\r\n                  <Input\r\n                    id=\"password\"\r\n                    labelAlignment={inputLabelAlign}\r\n                    name=\"password\"\r\n                    label=\"Senha\"\r\n                    value={formik.values.password}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    style={inputStyles}\r\n                    placeholder=\"Mais de 8 caracteres\"\r\n                    type=\"password\"\r\n                    className=\"rainbow-p-around_medium\"\r\n                    error={formik.errors.password ? formik.errors.password : \"\"}\r\n                  />\r\n                </Row>\r\n                <Row>\r\n                  <Input\r\n                    id=\"zipcode\"\r\n                    labelAlignment={inputLabelAlign}\r\n                    name=\"zipcode\"\r\n                    label=\"CEP\"\r\n                    value={formik.values.zipcode}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    style={inputStyles}\r\n                    placeholder=\"Apenas Números\"\r\n                    type=\"number\"\r\n                    className=\"rainbow-p-around_medium\"\r\n                    error={formik.errors.zipcode ? formik.errors.zipcode : \"\"}\r\n                  />\r\n                  <Input\r\n                    id=\"city\"\r\n                    labelAlignment={inputLabelAlign}\r\n                    name=\"city\"\r\n                    label=\"Cidade\"\r\n                    value={formik.values.city}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    style={inputStyles}\r\n                    placeholder=\"João Pessoa\"\r\n                    type=\"text\"\r\n                    className=\"rainbow-p-around_medium\"\r\n                    error={formik.errors.city ? formik.errors.city : \"\"}\r\n                  />\r\n                  <Select\r\n                    id=\"state\"\r\n                    labelAlignment={inputLabelAlign}\r\n                    name=\"state\"\r\n                    label=\"Estado\"\r\n                    value={formik.values.state}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    style={inputStyles}\r\n                    placeholder=\"PB\"\r\n                    options={States.UF}\r\n                    type=\"text\"\r\n                    className=\"rainbow-p-around_medium\"\r\n                    error={formik.errors.state ? formik.errors.state : \"\"}\r\n                  />\r\n                </Row>\r\n                <Row>\r\n                  <Input\r\n                    id=\"street\"\r\n                    labelAlignment={inputLabelAlign}\r\n                    name=\"street\"\r\n                    label=\"Endereço\"\r\n                    value={formik.values.street}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    style={inputStyles}\r\n                    placeholder=\"Rua João Pessoa 234 Sala A\"\r\n                    type=\"text\"\r\n                    className=\"rainbow-p-around_medium\"\r\n                    error={formik.errors.street ? formik.errors.street : \"\"}\r\n                  />\r\n                  <Input\r\n                    id=\"neighborhood\"\r\n                    labelAlignment={inputLabelAlign}\r\n                    name=\"neighborhood\"\r\n                    label=\"Bairro\"\r\n                    value={formik.values.neighborhood}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    style={inputStyles}\r\n                    placeholder=\"Centro\"\r\n                    type=\"text\"\r\n                    className=\"rainbow-p-around_medium\"\r\n                    error={\r\n                      formik.errors.neighborhood\r\n                        ? formik.errors.neighborhood\r\n                        : \"\"\r\n                    }\r\n                  />\r\n                </Row>\r\n                <Row>\r\n                  <Input\r\n                    id=\"complement\"\r\n                    labelAlignment={inputLabelAlign}\r\n                    name=\"complement\"\r\n                    label=\"Complemento\"\r\n                    value={formik.values.complement}\r\n                    onChange={formik.handleChange}\r\n                    onBlur={formik.handleBlur}\r\n                    style={inputStyles}\r\n                    placeholder=\"Proximo ao prédio azul\"\r\n                    type=\"text\"\r\n                    className=\"rainbow-p-around_medium\"\r\n                    error={\r\n                      formik.errors.complement ? formik.errors.complement : \"\"\r\n                    }\r\n                  />\r\n                </Row>\r\n              </RenderIf>\r\n\r\n              <AddressList />\r\n\r\n              <Button\r\n                className=\"rainbow-m-around_medium\"\r\n                variant=\"destructive\"\r\n                type=\"button\"\r\n                className=\"rainbow-m-around_medium\"\r\n                onClick={() => handleDelete()}\r\n                disabled={\r\n                  formik.values.id === null ||\r\n                  typeof formik.values.id === \"undefined\"\r\n                }\r\n              >\r\n                Deletar <FaTrash className=\"rainbow-m-left_medium\" />\r\n              </Button>\r\n              <Button\r\n                className=\"rainbow-m-around_medium\"\r\n                variant=\"border-filled\"\r\n                type=\"submit\"\r\n                className=\"rainbow-m-around_medium\"\r\n              >\r\n                Enviar <FaSave className=\"rainbow-m-left_medium\" />\r\n              </Button>\r\n            </form>\r\n          </>\r\n        }\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UserForm;\r\n","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\UserForm\\styles.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\AddressList\\index.js",["498"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Card } from \"react-rainbow-components\";\r\n\r\nimport { ApplicationContext } from \"../../Contexts/ApplicationContext\";\r\nimport { Api } from \"../../Services/Api\";\r\n\r\n// import { Container } from './styles';\r\n\r\nfunction AddressList() {\r\n  const [addressList, setAddressList] = useState([]);\r\n  const { authenticatedUser } = useContext(ApplicationContext);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      !(\r\n        authenticatedUser === null ||\r\n        typeof authenticatedUser === \"undefined\" ||\r\n        Object.keys(authenticatedUser).length === 0\r\n      )\r\n    ) {\r\n      Api.get(`/adresses/`).then((response) => {\r\n        setAddressList(response.data);\r\n      });\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {addressList.map((i) => (\r\n        <Card\r\n          key={i.id}\r\n          style={{ margin: \"10px\" }}\r\n          title={i.street}\r\n          footer={\r\n            <>\r\n              <div className=\"rainbow-align-content_space-between\">\r\n                <p>{i.zipcode}</p>\r\n                <p>\r\n                  {i.city} - {i.state}\r\n                </p>\r\n                <p>{i.neighborhood}</p>\r\n              </div>\r\n              <div className=\"rainbow-align-content_space-between\">\r\n                <p>{i.complement}</p>\r\n              </div>\r\n            </>\r\n          }\r\n        ></Card>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddressList;\r\n","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CompanyList\\index.js",["499"],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Pagination } from \"react-rainbow-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport digishop from \"../../Assets/digishopcolor.png\";\r\nimport { ApplicationContext } from \"../../Contexts/ApplicationContext\";\r\nimport { Api, baseURL } from \"../../Services/Api\";\r\nimport DigiCard from \"../DigiCard\";\r\nimport Grid from \"../Grid\";\r\n\r\nfunction CompanyList() {\r\n  const [companies, setCompanies] = useState({\r\n    content: [],\r\n    totalPages: 1,\r\n    number: 0,\r\n  });\r\n\r\n  const [currentPage, setCurrentPage] = useState({ currentPage: 0 });\r\n  const { globalSearch } = useContext(ApplicationContext);\r\n\r\n  useEffect(() => {\r\n    loadCompanies();\r\n  }, []);\r\n\r\n  const loadCompanies = async () => {\r\n    await Api.get(\r\n      `/companies?page=${currentPage.currentPage}&name=${globalSearch}`\r\n    ).then((res) => {\r\n      setCompanies(res.data);\r\n    });\r\n  };\r\n\r\n  const handleOnChange = (event, page) => {\r\n    setCurrentPage({ currentPage: page - 1 });\r\n  };\r\n\r\n  const getLogo = (company) => {\r\n    if (typeof company.logo !== \"undefined\" && company.logo !== null) {\r\n      return `${baseURL}/${company.domain}/attachments/${company.logo}`;\r\n    } else {\r\n      return digishop;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Grid>\r\n        {companies.content.map((i) => (\r\n          <Link\r\n            key={i.id}\r\n            to={`/${i.domain}/`}\r\n            style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n          >\r\n            <DigiCard key={i.id} title={i.name} imageUrl={getLogo(i)} />\r\n          </Link>\r\n        ))}\r\n      </Grid>\r\n      <Pagination\r\n        style={{ marginBottom: \"0px !important\", marginTop: \"auto !important\" }}\r\n        className=\"rainbow-m_auto\"\r\n        pages={companies.totalPages}\r\n        activePage={currentPage.currentPage + 1}\r\n        onChange={handleOnChange}\r\n      />\r\n    </>\r\n  );\r\n}\r\nexport default CompanyList;\r\n","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CompanyList\\styles.js",[],["500","501"],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\Login\\index.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\Dashboard\\index.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\SearchCompanyDomain\\index.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CompanySearchCard\\index.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CompanySearchCard\\styles.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\AdminMenu\\index.js",["502"],"import React, { useContext, useState } from \"react\";\r\nimport { FaBoxes, FaCashRegister, FaChartPie, FaPowerOff, FaStore } from \"react-icons/fa\";\r\nimport { VerticalItem, VerticalNavigation, VerticalSection } from \"react-rainbow-components\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nimport { ApplicationContext } from \"../../Contexts/ApplicationContext\";\r\nimport CompanyLogo from \"../CompanyLogo\";\r\nimport { Row } from \"./styles\";\r\n\r\n// import { Container } from './styles';\r\n\r\nfunction AdminMenu({ children }) {\r\n  const [selectedItem, setSelectedItem] = useState();\r\n  const [leftContentMargin, setLeftContentMargin] = useState(160);\r\n  const [redirectLogin, setRedirectLogin] = useState(false);\r\n  const { company, logoff } = useContext(ApplicationContext);\r\n  const handleOnSelect = (event, item) => {\r\n    setSelectedItem(item);\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    Swal.fire({\r\n      title: `Deseja realmente sair?`,\r\n      icon: \"question\",\r\n      showDenyButton: true,\r\n      confirmButtonText: `Sim`,\r\n      denyButtonText: `Não`,\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        logoff();\r\n        setRedirectLogin(true);\r\n      } else if (result.isDenied) {\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Row style={{ height: \"100%\" }}>\r\n      {redirectLogin ? (\r\n        <Redirect to={{ pathname: `/${company}/admin/login/` }} />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <VerticalNavigation\r\n        style={{\r\n          overflow: \"hidden\",\r\n          backgroundColor: \"#fff\",\r\n          position: \"fixed\",\r\n          height: \"100%\",\r\n          width: \"150px\",\r\n          zIndex: \"99999\",\r\n        }}\r\n        compact\r\n        selectedItem={selectedItem}\r\n        onSelect={handleOnSelect}\r\n      >\r\n        <VerticalSection>\r\n          <Row\r\n            center\r\n            style={{ marginBottom: \"10px\", borderBottom: \"solid 1px #e8e8e8\" }}\r\n          >\r\n            <CompanyLogo width=\"100px\" />\r\n          </Row>\r\n          <Link\r\n            to={`/${company}/admin/dashboard/`}\r\n            style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n          >\r\n            <VerticalItem\r\n              name=\"item-1\"\r\n              label=\"Dashboard\"\r\n              icon={<FaChartPie />}\r\n            />\r\n          </Link>\r\n          <Link\r\n            to={`/${company}/admin/products/`}\r\n            style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n          >\r\n            <VerticalItem name=\"item-2\" label=\"Produtos\" icon={<FaBoxes />} />\r\n          </Link>\r\n          <Link\r\n            to={`/${company}/admin/company/edit/`}\r\n            style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n          >\r\n            <VerticalItem name=\"item-3\" label=\"Empresa\" icon={<FaStore />} />\r\n          </Link>\r\n          <Link\r\n            to={`/${company}/admin/orders/`}\r\n            style={{ color: \"inherit\", textDecoration: \"inherit\" }}\r\n          >\r\n            <VerticalItem\r\n              name=\"item-4\"\r\n              label=\"Pedidos\"\r\n              icon={<FaCashRegister />}\r\n            />\r\n          </Link>\r\n          <VerticalItem\r\n            name=\"item-5\"\r\n            label=\"Sair\"\r\n            onClick={handleLogout}\r\n            icon={<FaPowerOff />}\r\n          />\r\n        </VerticalSection>\r\n      </VerticalNavigation>\r\n\r\n      <div\r\n        style={{\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          padding: \"10px\",\r\n          margin: \"10px\",\r\n          marginLeft: leftContentMargin,\r\n          float: \"right\",\r\n          overflow: \"vertical\",\r\n        }}\r\n      >\r\n        {children}\r\n      </div>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default AdminMenu;\r\n","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\AdminMenu\\styles.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CardDashboard\\index.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\CardDashboard\\styles.js",["503"],"import React from \"react\";\r\nimport { Card } from \"react-rainbow-components\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Row = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  justify-content: ${(props) =>\r\n    props.align !== null && typeof props.align !== \"undefined\"\r\n      ? props.align\r\n      : \"start\"};\r\n  flex-direction: row;\r\n`;\r\n\r\nexport const Col = styled.div`\r\n  padding: ${(props) => props.padding + \"px\"};\r\n  justify-content: ${(props) =>\r\n    props.align !== null && typeof props.align !== \"undefined\"\r\n      ? props.align\r\n      : \"start\"};\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const StyledCard = styled(Card)`\r\n  flex: 1;\r\n  max-width: 280px;\r\n  margin-bottom: 10px;\r\n  padding-top: 19px;\r\n  padding-bottom: 19px;\r\n  padding-left: 22px;\r\n  padding-right: 22px;\r\n  @media (max-width: 830px) {\r\n    width: 100%;\r\n    max-width: 89%;\r\n    margin: 20px;\r\n    margin-top: 5px;\r\n    margin-bottom: 5px\r\n  }\r\n`;\r\n","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\Dashboard\\syles.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\OrderStatusCard\\index.js",["504","505"],"import PropTypes from \"prop-types\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\n\r\nimport { ApplicationContext } from \"../../Contexts/ApplicationContext\";\r\nimport { Api } from \"../../Services/Api\";\r\nimport CardDashboard from \"../CardDashboard\";\r\n\r\n// import { Container } from './styles';\r\n\r\nfunction OrderStatusCard({ status, startDate, endDate, title, icon }) {\r\n  const { company } = useContext(ApplicationContext);\r\n  const [cardData, setCardData] = useState(0);\r\n\r\n  useEffect(async () => {await loadData()}, [company]);\r\n\r\n  const loadData = async () => {\r\n    if (company !== \"\") {\r\n      await Api.get(`${company}/order/countStatus?status=${status}&startDate=${startDate}&endDate=${endDate}`).then(\r\n        (response) => {\r\n          setCardData(response.data.count);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  return <CardDashboard title={title} icon={icon} value={cardData} />;\r\n}\r\n\r\nOrderStatusCard.propTypes = {\r\n  satus: PropTypes.number,\r\n  startDate: PropTypes.number,\r\n  endDate: PropTypes.number,\r\n  title: PropTypes.string,\r\n  icon: PropTypes.object,\r\n};\r\n\r\nOrderStatusCard.defaultProps = {\r\n  satus: 0,\r\n  startDate: new Date().setHours(0,0,0,0),\r\n  endDate: new Date().setHours(23,59,59,999),\r\n  title: \"Pedidos\",\r\n  icon: {},\r\n};\r\n\r\nexport default OrderStatusCard;\r\n","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\DashboardCardList\\index.js",["506","507","508"],"import PropTypes from \"prop-types\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { FaBoxOpen, FaCheck, FaMoneyBill } from \"react-icons/fa\";\r\nimport { Avatar } from \"react-rainbow-components\";\r\n\r\nimport { ApplicationContext } from \"../../Contexts/ApplicationContext\";\r\nimport { Api } from \"../../Services/Api\";\r\nimport CardDashboard from \"../CardDashboard\";\r\nimport { Row } from \"./styles\";\r\n\r\nfunction DashboardCardList({ startDate, endDate }) {\r\n  const { company } = useContext(ApplicationContext);\r\n  const [cardsData, setCardsData] = useState({\r\n    open: 0,\r\n    finished: 0,\r\n    totals: 0,\r\n    sent: 0,\r\n    open: 0,\r\n  });\r\n  useEffect(async () => {\r\n    await loadData();\r\n  }, [company]);\r\n  const loadData = async () => {\r\n    if (company !== \"\") {\r\n      await Api.get(\r\n        `${company}/order/orderStatistics?startDate=${startDate}&endDate=${endDate}`\r\n      ).then((response) => {\r\n        setCardsData(response.data);\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row align={\"space-between\"}>\r\n      <CardDashboard\r\n        title={\"Vendas\"}\r\n        icon={<Avatar icon={<FaMoneyBill />} />}\r\n        value={\r\n          \"R$\" +\r\n          cardsData.totals.toLocaleString(\"pt-br\", {\r\n            minimumFractionDigits: 2,\r\n          })\r\n        }\r\n      />\r\n      <CardDashboard\r\n        title={\"Pedidos Abertos\"}\r\n        icon={<Avatar icon={<FaBoxOpen />} />}\r\n        value={cardsData.open}\r\n      />\r\n      <CardDashboard\r\n        title={\"Pedidos Finalizados\"}\r\n        icon={<Avatar icon={<FaCheck />} />}\r\n        value={cardsData.finished}\r\n      />\r\n    </Row>\r\n  );\r\n}\r\n\r\nDashboardCardList.propTypes = {\r\n  startDate: PropTypes.number,\r\n  endDate: PropTypes.number,\r\n};\r\n\r\nDashboardCardList.defaultProps = {\r\n  startDate: new Date().setHours(0, 0, 0, 0),\r\n  endDate: new Date().setHours(23, 59, 59, 999),\r\n};\r\n\r\nexport default DashboardCardList;\r\n","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\DashboardCardList\\styles.js",["509"],"import { Card } from \"react-rainbow-components\";\r\nimport styled from \"styled-components\";\r\n\r\nexport const Row = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  justify-content: ${(props) => (props.align !== null && typeof props.align !== \"undefined\" ? props.align : \"start\")};\r\n  flex-direction: row;\r\n  @media (max-width: 830px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const Col = styled.div`\r\n  padding: ${(props) => props.padding + \"px\"};\r\n  justify-content: ${(props) => (props.align !== null && typeof props.align !== \"undefined\" ? props.align : \"start\")};\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\DashboardChart\\index.js",["510","511"],"import PropTypes from \"prop-types\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { FaChartPie } from \"react-icons/fa\";\r\nimport { Avatar, Card, Chart, Dataset } from \"react-rainbow-components\";\r\n\r\nimport { ApplicationContext } from \"../../Contexts/ApplicationContext\";\r\nimport { Api } from \"../../Services/Api\";\r\n\r\n// import { Container } from './styles';\r\n\r\nfunction DashboardChart({ startDate, endDate }) {\r\n  const { company } = useContext(ApplicationContext);\r\n\r\n  const [chartLabels, setChartLabels] = useState([]);\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n  useEffect(async () => {\r\n    await loadData();\r\n  }, [company]);\r\n\r\n  const loadData = async () => {\r\n    if (company !== \"\") {\r\n      await Api.get(\r\n        `${company}/order/orderTotals?startDate=${startDate}&endDate=${endDate}`\r\n      ).then((response) => {\r\n        let labels = response.data.map((i) => i.day);\r\n        setChartLabels(labels);\r\n\r\n        let data = response.data.map((i) => i.value);\r\n        setChartData(data);\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card \r\n    \r\n    icon={<Avatar icon={<FaChartPie />} />}\r\n    title=\"Comparativo de Vendas\"\r\n      children={\r\n        <Chart type=\"bar\" labels={chartLabels}>\r\n          <Dataset\r\n            key=\"Vendas\"\r\n            title=\"Vendas\"\r\n            values={chartData}\r\n            backgroundColor=\"#01b6f5\"\r\n          />\r\n        </Chart>\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nDashboardChart.propTypes = {\r\n  startDate: PropTypes.number,\r\n  endDate: PropTypes.number,\r\n};\r\n\r\nDashboardChart.defaultProps = {\r\n  startDate: new Date(Date.now() - 7 * 24 * 60 * 60 * 1000).setHours(\r\n    0,\r\n    0,\r\n    0,\r\n    0\r\n  ),\r\n  endDate: new Date().setHours(23, 59, 59, 999),\r\n};\r\n\r\nexport default DashboardChart;\r\n","C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\BackgroundImage\\index.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\BackgroundImage\\styles.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\Grid\\index.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\Grid\\styles.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\DigiCard\\index.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Components\\DigiCard\\styles.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\FinishedOrder\\index.js",[],"C:\\Users\\Venancio\\Documents\\projetosDev\\digi-web\\src\\Pages\\FinishedOrder\\styles.js",[],{"ruleId":"512","replacedBy":"513"},{"ruleId":"514","replacedBy":"515"},{"ruleId":"512","replacedBy":"516"},{"ruleId":"514","replacedBy":"517"},{"ruleId":"518","severity":1,"message":"519","line":11,"column":10,"nodeType":"520","messageId":"521","endLine":11,"endColumn":14},{"ruleId":"518","severity":1,"message":"522","line":11,"column":16,"nodeType":"520","messageId":"521","endLine":11,"endColumn":19},{"ruleId":"518","severity":1,"message":"523","line":11,"column":21,"nodeType":"520","messageId":"521","endLine":11,"endColumn":30},{"ruleId":"518","severity":1,"message":"524","line":11,"column":32,"nodeType":"520","messageId":"521","endLine":11,"endColumn":43},{"ruleId":"518","severity":1,"message":"525","line":11,"column":45,"nodeType":"520","messageId":"521","endLine":11,"endColumn":50},{"ruleId":"518","severity":1,"message":"526","line":11,"column":52,"nodeType":"520","messageId":"521","endLine":11,"endColumn":57},{"ruleId":"518","severity":1,"message":"527","line":11,"column":59,"nodeType":"520","messageId":"521","endLine":11,"endColumn":62},{"ruleId":"518","severity":1,"message":"528","line":11,"column":64,"nodeType":"520","messageId":"521","endLine":11,"endColumn":70},{"ruleId":"529","severity":1,"message":"530","line":28,"column":6,"nodeType":"531","endLine":28,"endColumn":20,"suggestions":"532"},{"ruleId":"529","severity":1,"message":"533","line":15,"column":6,"nodeType":"531","endLine":15,"endColumn":15,"suggestions":"534"},{"ruleId":"512","replacedBy":"535"},{"ruleId":"514","replacedBy":"536"},{"ruleId":"529","severity":1,"message":"537","line":21,"column":6,"nodeType":"531","endLine":21,"endColumn":16,"suggestions":"538"},{"ruleId":"529","severity":1,"message":"539","line":25,"column":6,"nodeType":"531","endLine":25,"endColumn":20,"suggestions":"540"},{"ruleId":"529","severity":1,"message":"541","line":13,"column":6,"nodeType":"531","endLine":13,"endColumn":15,"suggestions":"542"},{"ruleId":"518","severity":1,"message":"543","line":19,"column":5,"nodeType":"520","messageId":"521","endLine":19,"endColumn":28},{"ruleId":"529","severity":1,"message":"544","line":60,"column":6,"nodeType":"531","endLine":60,"endColumn":8,"suggestions":"545"},{"ruleId":"529","severity":1,"message":"546","line":19,"column":6,"nodeType":"531","endLine":19,"endColumn":36,"suggestions":"547"},{"ruleId":"548","severity":1,"message":"549","line":26,"column":39,"nodeType":"550","messageId":"551","endLine":26,"endColumn":41},{"ruleId":"518","severity":1,"message":"552","line":26,"column":26,"nodeType":"520","messageId":"521","endLine":26,"endColumn":43},{"ruleId":"529","severity":1,"message":"553","line":96,"column":13,"nodeType":"550","endLine":98,"endColumn":4},{"ruleId":"529","severity":1,"message":"554","line":98,"column":6,"nodeType":"531","endLine":98,"endColumn":15,"suggestions":"555"},{"ruleId":"529","severity":1,"message":"556","line":105,"column":6,"nodeType":"531","endLine":105,"endColumn":22,"suggestions":"557"},{"ruleId":"529","severity":1,"message":"558","line":112,"column":6,"nodeType":"531","endLine":112,"endColumn":34,"suggestions":"559"},{"ruleId":"548","severity":1,"message":"549","line":118,"column":30,"nodeType":"550","messageId":"551","endLine":118,"endColumn":32},{"ruleId":"560","severity":1,"message":"561","line":128,"column":37,"nodeType":"562","messageId":"563","endLine":128,"endColumn":39},{"ruleId":"560","severity":1,"message":"564","line":144,"column":56,"nodeType":"562","messageId":"563","endLine":144,"endColumn":58},{"ruleId":"518","severity":1,"message":"565","line":151,"column":9,"nodeType":"520","messageId":"521","endLine":151,"endColumn":28},{"ruleId":"560","severity":1,"message":"564","line":152,"column":56,"nodeType":"562","messageId":"563","endLine":152,"endColumn":58},{"ruleId":"529","severity":1,"message":"566","line":34,"column":6,"nodeType":"531","endLine":34,"endColumn":15,"suggestions":"567"},{"ruleId":"512","replacedBy":"568"},{"ruleId":"514","replacedBy":"569"},{"ruleId":"560","severity":1,"message":"564","line":32,"column":25,"nodeType":"562","messageId":"563","endLine":32,"endColumn":27},{"ruleId":"518","severity":1,"message":"570","line":2,"column":29,"nodeType":"520","messageId":"521","endLine":2,"endColumn":38},{"ruleId":"529","severity":1,"message":"571","line":52,"column":6,"nodeType":"531","endLine":52,"endColumn":15,"suggestions":"572"},{"ruleId":"573","severity":1,"message":"574","line":291,"column":17,"nodeType":"575","endLine":291,"endColumn":52},{"ruleId":"518","severity":1,"message":"576","line":1,"column":8,"nodeType":"520","messageId":"521","endLine":1,"endColumn":13},{"ruleId":"529","severity":1,"message":"577","line":19,"column":6,"nodeType":"531","endLine":19,"endColumn":15,"suggestions":"578"},{"ruleId":"512","replacedBy":"579"},{"ruleId":"514","replacedBy":"580"},{"ruleId":"529","severity":1,"message":"581","line":56,"column":6,"nodeType":"531","endLine":56,"endColumn":28,"suggestions":"582"},{"ruleId":"512","replacedBy":"583"},{"ruleId":"514","replacedBy":"584"},{"ruleId":"529","severity":1,"message":"585","line":50,"column":6,"nodeType":"531","endLine":50,"endColumn":42,"suggestions":"586"},{"ruleId":"518","severity":1,"message":"587","line":11,"column":5,"nodeType":"520","messageId":"521","endLine":11,"endColumn":24},{"ruleId":"529","severity":1,"message":"588","line":16,"column":6,"nodeType":"531","endLine":16,"endColumn":29,"suggestions":"589"},{"ruleId":"529","severity":1,"message":"590","line":26,"column":6,"nodeType":"531","endLine":26,"endColumn":19,"suggestions":"591"},{"ruleId":"548","severity":1,"message":"549","line":55,"column":31,"nodeType":"550","messageId":"551","endLine":55,"endColumn":33},{"ruleId":"573","severity":1,"message":"574","line":285,"column":17,"nodeType":"575","endLine":285,"endColumn":52},{"ruleId":"573","severity":1,"message":"574","line":295,"column":17,"nodeType":"575","endLine":295,"endColumn":52},{"ruleId":"518","severity":1,"message":"592","line":1,"column":17,"nodeType":"520","messageId":"521","endLine":1,"endColumn":25},{"ruleId":"518","severity":1,"message":"570","line":1,"column":27,"nodeType":"520","messageId":"521","endLine":1,"endColumn":36},{"ruleId":"529","severity":1,"message":"593","line":20,"column":6,"nodeType":"531","endLine":20,"endColumn":19,"suggestions":"594"},{"ruleId":"573","severity":1,"message":"574","line":141,"column":13,"nodeType":"575","endLine":141,"endColumn":48},{"ruleId":"573","severity":1,"message":"574","line":151,"column":13,"nodeType":"575","endLine":151,"endColumn":48},{"ruleId":"529","severity":1,"message":"593","line":66,"column":6,"nodeType":"531","endLine":66,"endColumn":19,"suggestions":"595"},{"ruleId":"560","severity":1,"message":"564","line":208,"column":38,"nodeType":"562","messageId":"563","endLine":208,"endColumn":40},{"ruleId":"518","severity":1,"message":"596","line":2,"column":25,"nodeType":"520","messageId":"521","endLine":2,"endColumn":35},{"ruleId":"518","severity":1,"message":"597","line":3,"column":8,"nodeType":"520","messageId":"521","endLine":3,"endColumn":21},{"ruleId":"529","severity":1,"message":"553","line":20,"column":13,"nodeType":"550","endLine":23,"endColumn":4},{"ruleId":"529","severity":1,"message":"593","line":23,"column":6,"nodeType":"531","endLine":23,"endColumn":25,"suggestions":"598"},{"ruleId":"573","severity":1,"message":"574","line":346,"column":17,"nodeType":"575","endLine":346,"endColumn":52},{"ruleId":"573","severity":1,"message":"574","line":359,"column":17,"nodeType":"575","endLine":359,"endColumn":52},{"ruleId":"529","severity":1,"message":"599","line":25,"column":6,"nodeType":"531","endLine":25,"endColumn":8,"suggestions":"600"},{"ruleId":"529","severity":1,"message":"601","line":23,"column":6,"nodeType":"531","endLine":23,"endColumn":8,"suggestions":"602"},{"ruleId":"512","replacedBy":"603"},{"ruleId":"514","replacedBy":"604"},{"ruleId":"518","severity":1,"message":"605","line":15,"column":29,"nodeType":"520","messageId":"521","endLine":15,"endColumn":49},{"ruleId":"518","severity":1,"message":"576","line":1,"column":8,"nodeType":"520","messageId":"521","endLine":1,"endColumn":13},{"ruleId":"529","severity":1,"message":"553","line":14,"column":13,"nodeType":"550","endLine":14,"endColumn":43},{"ruleId":"529","severity":1,"message":"593","line":14,"column":45,"nodeType":"531","endLine":14,"endColumn":54,"suggestions":"606"},{"ruleId":"607","severity":1,"message":"608","line":18,"column":5,"nodeType":"609","messageId":"563","endLine":18,"endColumn":9},{"ruleId":"529","severity":1,"message":"553","line":20,"column":13,"nodeType":"550","endLine":22,"endColumn":4},{"ruleId":"529","severity":1,"message":"593","line":22,"column":6,"nodeType":"531","endLine":22,"endColumn":15,"suggestions":"610"},{"ruleId":"518","severity":1,"message":"519","line":1,"column":10,"nodeType":"520","messageId":"521","endLine":1,"endColumn":14},{"ruleId":"529","severity":1,"message":"553","line":17,"column":13,"nodeType":"550","endLine":19,"endColumn":4},{"ruleId":"529","severity":1,"message":"593","line":19,"column":6,"nodeType":"531","endLine":19,"endColumn":15,"suggestions":"611"},"no-native-reassign",["612"],"no-negated-in-lhs",["613"],["612"],["613"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'Container' is defined but never used.","'Description' is defined but never used.","'Image' is defined but never used.","'Price' is defined but never used.","'Row' is defined but never used.","'Titile' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'loadProducts' and 'setShowGlobalSearch'. Either include them or remove the dependency array.","ArrayExpression",["614"],"React Hook useEffect has a missing dependency: 'loadCaregories'. Either include it or remove the dependency array.",["615"],["612"],["613"],"React Hook useEffect has a missing dependency: 'loadProducts'. Either include it or remove the dependency array.",["616"],"React Hook useEffect has a missing dependency: 'isOpen'. Either include it or remove the dependency array. You can also do a functional update 'setIsopen(i => ...)' if you only need 'isOpen' in the 'setIsopen' call.",["617"],"React Hook useEffect has a missing dependency: 'updateCheckoutProducts'. Either include it or remove the dependency array.",["618"],"'updateClientDataStorage' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'clientCheckoutData.name' and 'clientCheckoutData.phone'. Either include them or remove the dependency array.",["619"],"React Hook useEffect has a missing dependency: 'sumSubtotal'. Either include it or remove the dependency array.",["620"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'setReadOnlyFields' is assigned a value but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","React Hook useEffect has a missing dependency: 'loadDeliveryAreas'. Either include it or remove the dependency array.",["621"],"React Hook useEffect has missing dependencies: 'clientCheckoutData' and 'setClientCheckoutData'. Either include them or remove the dependency array.",["622"],"React Hook useEffect has missing dependencies: 'formik' and 'getDeliveryValueById'. Either include them or remove the dependency array.",["623"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'getDeliveryAreaById' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'loadCompany'. Either include it or remove the dependency array.",["624"],["612"],["613"],"'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'formik.values'. Either include it or remove the dependency array.",["625"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'React' is defined but never used.","React Hook useEffect has missing dependencies: 'setCompany', 'updateCheckoutProducts', and 'updateClientDataStorage'. Either include them or remove the dependency array.",["626"],["612"],["613"],"React Hook useEffect has missing dependencies: 'adminPerspective' and 'clientCheckoutData.id'. Either include them or remove the dependency array.",["627"],["612"],["613"],"React Hook useEffect has missing dependencies: 'authenticatedUser.token' and 'setShowGlobalSearch'. Either include them or remove the dependency array.",["628"],"'setShowGlobalSearch' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setFilePreview'. Either include it or remove the dependency array.",["629"],"React Hook useEffect has missing dependencies: 'loadCategories' and 'loadData'. Either include them or remove the dependency array.",["630"],"'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'loadData'. Either include it or remove the dependency array.",["631"],["632"],"'ButtonIcon' is defined but never used.","'OrderSubtotal' is defined but never used.",["633"],"React Hook useEffect has a missing dependency: 'authenticatedUser'. Either include it or remove the dependency array.",["634"],"React Hook useEffect has a missing dependency: 'loadCompanies'. Either include it or remove the dependency array.",["635"],["612"],["613"],"'setLeftContentMargin' is assigned a value but never used.",["636"],"no-dupe-keys","Duplicate key 'open'.","ObjectExpression",["637"],["638"],"no-global-assign","no-unsafe-negation",{"desc":"639","fix":"640"},{"desc":"641","fix":"642"},{"desc":"643","fix":"644"},{"desc":"645","fix":"646"},{"desc":"647","fix":"648"},{"desc":"649","fix":"650"},{"desc":"651","fix":"652"},{"desc":"653","fix":"654"},{"desc":"655","fix":"656"},{"desc":"657","fix":"658"},{"desc":"659","fix":"660"},{"desc":"661","fix":"662"},{"desc":"663","fix":"664"},{"desc":"665","fix":"666"},{"desc":"667","fix":"668"},{"desc":"669","fix":"670"},{"desc":"671","fix":"672"},{"desc":"673","fix":"674"},{"desc":"673","fix":"675"},{"desc":"676","fix":"677"},{"desc":"678","fix":"679"},{"desc":"680","fix":"681"},{"desc":"682","fix":"683"},{"desc":"682","fix":"684"},{"desc":"682","fix":"685"},"Update the dependencies array to be: [globalSearch, loadProducts, setShowGlobalSearch]",{"range":"686","text":"687"},"Update the dependencies array to be: [company, loadCaregories]",{"range":"688","text":"689"},"Update the dependencies array to be: [loadProducts, props.id]",{"range":"690","text":"691"},"Update the dependencies array to be: [isOpen, props.isOpen]",{"range":"692","text":"693"},"Update the dependencies array to be: [company, updateCheckoutProducts]",{"range":"694","text":"695"},"Update the dependencies array to be: [clientCheckoutData.name, clientCheckoutData.phone]",{"range":"696","text":"697"},"Update the dependencies array to be: [checkoutProducts, otherCosts, sumSubtotal]",{"range":"698","text":"699"},"Update the dependencies array to be: [company, loadDeliveryAreas]",{"range":"700","text":"701"},"Update the dependencies array to be: [clientCheckoutData, formik.isValid, setClientCheckoutData]",{"range":"702","text":"703"},"Update the dependencies array to be: [formik, formik.values.deliveryArea, getDeliveryValueById]",{"range":"704","text":"705"},"Update the dependencies array to be: [company, loadCompany]",{"range":"706","text":"707"},"Update the dependencies array to be: [company, formik.values]",{"range":"708","text":"709"},"Update the dependencies array to be: [company, setCompany, updateCheckoutProducts, updateClientDataStorage]",{"range":"710","text":"711"},"Update the dependencies array to be: [adminPerspective, clientCheckoutData.id, company, currentPage]",{"range":"712","text":"713"},"Update the dependencies array to be: [authenticatedUser.token, company, currentPage, globalSearch, setShowGlobalSearch]",{"range":"714","text":"715"},"Update the dependencies array to be: [attachmentId, company, setFilePreview]",{"range":"716","text":"717"},"Update the dependencies array to be: [company, id, loadCategories, loadData]",{"range":"718","text":"719"},"Update the dependencies array to be: [company, id, loadData]",{"range":"720","text":"721"},{"range":"722","text":"721"},"Update the dependencies array to be: [authenticatedUser, loadData]",{"range":"723","text":"724"},"Update the dependencies array to be: [authenticatedUser]",{"range":"725","text":"726"},"Update the dependencies array to be: [loadCompanies]",{"range":"727","text":"728"},"Update the dependencies array to be: [company, loadData]",{"range":"729","text":"730"},{"range":"731","text":"730"},{"range":"732","text":"730"},[1125,1139],"[globalSearch, loadProducts, setShowGlobalSearch]",[513,522],"[company, loadCaregories]",[802,812],"[loadProducts, props.id]",[869,883],"[isOpen, props.isOpen]",[448,457],"[company, updateCheckoutProducts]",[1844,1846],"[clientCheckoutData.name, clientCheckoutData.phone]",[550,580],"[checkoutProducts, otherCosts, sumSubtotal]",[3507,3516],"[company, loadDeliveryAreas]",[3658,3674],"[clientCheckoutData, formik.isValid, setClientCheckoutData]",[3821,3849],"[formik, formik.values.deliveryArea, getDeliveryValueById]",[864,873],"[company, loadCompany]",[2214,2223],"[company, formik.values]",[526,535],"[company, setCompany, updateCheckoutProducts, updateClientDataStorage]",[1708,1730],"[adminPerspective, clientCheckoutData.id, company, currentPage]",[1502,1538],"[authenticatedUser.token, company, currentPage, globalSearch, setShowGlobalSearch]",[587,610],"[attachmentId, company, setFilePreview]",[1063,1076],"[company, id, loadCategories, loadData]",[703,716],"[company, id, loadData]",[1505,1518],[901,920],"[authenticatedUser, loadData]",[744,746],"[authenticatedUser]",[732,734],"[loadCompanies]",[535,544],"[company, loadData]",[716,725],[657,666]]